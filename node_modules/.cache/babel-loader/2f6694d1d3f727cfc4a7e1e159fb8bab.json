{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _objectSpread from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\dashboards\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // javascipt plugin for creating charts\n\nimport { Chart } from \"chart.js\";\nimport \"./Dashboard.css\"; // import the stylesheet\n\nimport \"react-step-progress/dist/index.css\"; // import { chartOptions, parseOptions } from \"variables/charts.js\";\n\nimport StaffMember from \"../staffMemeber/StaffMember\";\nimport ResidentialDetail from \"../ResidentialDetail/ResidentialDetail\";\nimport ContactDetail from \"../ContactDetail/ContactDetail\";\nimport OccupationalDetail from \"../OccupationalDetail/OccupationalDetail\";\nimport UserData from \"../userDataTable/UserData\"; // if (window.Chart) {\n//   parseOptions(Chart, chartOptions());\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard(props) {\n  _s();\n\n  console.log(props); //state for steps\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      step = _React$useState2[0],\n      setStep = _React$useState2[1]; // function for going to next step by increasing step state by 1\n\n\n  var nextStep = function nextStep() {\n    setStep(step + 1);\n  }; // function for going to previous step by decreasing step state by 1\n\n\n  var prevStep = function prevStep() {\n    setStep(step - 1);\n  }; //state for form data\n\n\n  var _React$useState3 = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    address: \"\",\n    pin: \"\",\n    city: \"\",\n    country: \"\",\n    age: \"\",\n    alternateAddress: \"\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      formData = _React$useState4[0],\n      setFormData = _React$useState4[1]; // handling form input data by taking onchange value and updating our previous form data state\n\n\n  var handleInputData = function handleInputData(input) {\n    return function (e) {\n      // input value from the form\n      var value = e.target.value; //updating for data state taking previous state and then adding new value to create new object\n\n      setFormData(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, value));\n      });\n    };\n  };\n\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(StaffMember, {\n        nextStep: nextStep,\n        handleFormData: handleInputData,\n        values: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(ResidentialDetail, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(ContactDetail, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n\n    case 4:\n      return /*#__PURE__*/_jsxDEV(UserData, {\n        data: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }, this);\n\n    default:\n      break;\n  }\n}\n\n_s(Dashboard, \"PEuvi6h7ou1pFhCwfhQELpUzEgo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/dashboards/Dashboard.js"],"names":["React","Chart","StaffMember","ResidentialDetail","ContactDetail","OccupationalDetail","UserData","Dashboard","props","console","log","useState","step","setStep","nextStep","prevStep","firstName","lastName","email","phone","password","address","pin","city","country","age","alternateAddress","formData","setFormData","handleInputData","input","e","value","target","prevState"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// javascipt plugin for creating charts\nimport { Chart } from \"chart.js\";\n\nimport \"./Dashboard.css\";\n\n// import the stylesheet\nimport \"react-step-progress/dist/index.css\";\n\n// import { chartOptions, parseOptions } from \"variables/charts.js\";\nimport StaffMember from \"../staffMemeber/StaffMember\";\nimport ResidentialDetail from \"../ResidentialDetail/ResidentialDetail\";\nimport ContactDetail from \"../ContactDetail/ContactDetail\";\nimport OccupationalDetail from \"../OccupationalDetail/OccupationalDetail\";\nimport UserData from \"../userDataTable/UserData\";\n\n// if (window.Chart) {\n//   parseOptions(Chart, chartOptions());\n// }\n\nfunction Dashboard(props) {\n  console.log(props);\n  //state for steps\n  const [step, setStep] = React.useState(1);\n\n  // function for going to next step by increasing step state by 1\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  // function for going to previous step by decreasing step state by 1\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  //state for form data\n  const [formData, setFormData] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    address: \"\",\n    pin: \"\",\n    city: \"\",\n    country: \"\",\n    age: \"\",\n    alternateAddress: \"\",\n  });\n\n  // handling form input data by taking onchange value and updating our previous form data state\n  const handleInputData = (input) => (e) => {\n    // input value from the form\n    const { value } = e.target;\n\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData((prevState) => ({\n      ...prevState,\n      [input]: value,\n    }));\n  };\n\n  switch (step) {\n    case 1:\n      return (\n        <StaffMember\n          nextStep={nextStep}\n          handleFormData={handleInputData}\n          values={formData}\n        />\n      );\n    case 2:\n      return (\n        <ResidentialDetail\n          nextStep={nextStep}\n          prevStep={prevStep}\n          handleFormData={handleInputData}\n          values={formData}\n        />\n      );\n    case 3:\n      return (\n        <ContactDetail\n          nextStep={nextStep}\n          prevStep={prevStep}\n          handleFormData={handleInputData}\n          values={formData}\n        />\n      );\n\n    case 4:\n      return <UserData data={formData} />;\n\n    default:\n      break;\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}