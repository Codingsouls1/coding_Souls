{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\userDataTable\\\\UserData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Table, Popconfirm } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Modal, ModalBody, ModalHeader, Popover } from \"reactstrap\";\nimport Dashboard from \"../dashboards/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserData(props) {\n  _s();\n\n  var _this = this;\n\n  console.log(\"props\", props);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modal = _React$useState2[0],\n      setModal = _React$useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    filters: [{\n      text: props.data.firstName,\n      value: props.data.firstName\n    }, {\n      text: \"Joe\",\n      value: \"Joe\"\n    }, {\n      text: \"Category 1\",\n      value: \"Category 1\",\n      children: [{\n        text: \"Yellow\",\n        value: \"Yellow\"\n      }, {\n        text: \"Pink\",\n        value: \"Pink\"\n      }]\n    }, {\n      text: \"Category 2\",\n      value: \"Category 2\",\n      children: [{\n        text: \"Green\",\n        value: \"Green\"\n      }, {\n        text: \"Black\",\n        value: \"Black\"\n      }]\n    }],\n    filterMode: \"tree\",\n    filterSearch: true,\n    onFilter: function onFilter(value, record) {\n      return record.name.includes(value);\n    },\n    width: \"30%\"\n  }, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    sorter: function sorter(a, b) {\n      return a.age - b.age;\n    }\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    filters: [{\n      text: props.data.address,\n      value: props.data.address\n    }, {\n      text: \"London\",\n      value: \"London\"\n    }, {\n      text: \"New York\",\n      value: \"New York\"\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.address.startsWith(value);\n    },\n    filterSearch: true,\n    width: \"40%\"\n  }, {\n    title: \"Phone\",\n    dataIndex: \"phone\",\n    filters: [{\n      text: props.data.phone,\n      value: props.data.phone\n    }, {\n      text: \"London\",\n      value: \"London\"\n    }, {\n      text: \"New York\",\n      value: \"New York\"\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.phone.startsWith(value);\n    },\n    filterSearch: true,\n    width: \"40%\"\n  }, {\n    title: \"City\",\n    dataIndex: \"city\",\n    filters: [{\n      text: props.data.city,\n      value: props.data.city\n    }, {\n      text: \"London\",\n      value: \"London\"\n    }, {\n      text: \"New York\",\n      value: \"New York\"\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.city.startsWith(value);\n    },\n    filterSearch: true,\n    width: \"40%\"\n  }, {\n    title: \"Country\",\n    dataIndex: \"country\",\n    filters: [{\n      text: props.data.country,\n      value: props.data.country\n    }, {\n      text: \"London\",\n      value: \"London\"\n    }, {\n      text: \"New York\",\n      value: \"New York\"\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.country.startsWith(value);\n    },\n    filterSearch: true,\n    width: \"40%\"\n  }, {\n    title: \"alternateAddress\",\n    dataIndex: \"alternateAddress\",\n    filters: [{\n      text: props.data.alternateAddress,\n      value: props.data.alternateAddress\n    }, {\n      text: \"London\",\n      value: \"London\"\n    }, {\n      text: \"New York\",\n      value: \"New York\"\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.alternateAddress.startsWith(value);\n    },\n    filterSearch: true,\n    width: \"40%\"\n  }, {\n    // key: \"5\",\n    title: \"Action\",\n    dataIndex: \"\",\n    key: \"x\",\n    render: function render() {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: toggle,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, _this);\n    }\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    key: \"y\",\n    render: function render(record) {\n      data.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: handleDelete(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, _this) : null;\n    }\n  }];\n  var data = [{\n    key: \"1\",\n    name: props.data.firstName,\n    age: props.data.age,\n    address: props.data.address,\n    phone: props.data.phone,\n    city: props.data.city,\n    country: props.data.country,\n    alternateAddress: props.data.alternateAddress\n  }, {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 42,\n    address: \"London No. 1 Lake Park\"\n  }, {\n    key: \"3\",\n    name: \"Joe Black\",\n    age: 32,\n    address: \"Sidney No. 1 Lake Park\"\n  }, {\n    key: \"4\",\n    name: \"Jim Red\",\n    age: 32,\n    address: \"London No. 2 Lake Park\"\n  }];\n\n  var handleDelete = function handleDelete(key) {// const dataSource = [...this.state.dataSource];\n    // this.setState({\n    //   dataSource: dataSource.filter((item) => item.key !== key),\n    // });\n  };\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log(\"params\", pagination, filters, sorter, extra);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          isClose: modal,\n          toggle: toggle,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserData, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = UserData;\nexport default UserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/userDataTable/UserData.js"],"names":["React","Table","Popconfirm","Modal","ModalBody","ModalHeader","Popover","Dashboard","UserData","props","console","log","useState","modal","setModal","toggle","columns","title","dataIndex","filters","text","data","firstName","value","children","filterMode","filterSearch","onFilter","record","name","includes","width","sorter","a","b","age","address","startsWith","phone","city","country","alternateAddress","key","render","length","handleDelete","onChange","pagination","extra"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Table, Popconfirm } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Modal, ModalBody, ModalHeader, Popover } from \"reactstrap\";\r\nimport Dashboard from \"../dashboards/Dashboard\";\r\n\r\nfunction UserData(props) {\r\n  console.log(\"props\", props);\r\n\r\n  const [modal, setModal] = React.useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      filters: [\r\n        {\r\n          text: props.data.firstName,\r\n          value: props.data.firstName,\r\n        },\r\n        {\r\n          text: \"Joe\",\r\n          value: \"Joe\",\r\n        },\r\n        {\r\n          text: \"Category 1\",\r\n          value: \"Category 1\",\r\n          children: [\r\n            {\r\n              text: \"Yellow\",\r\n              value: \"Yellow\",\r\n            },\r\n            {\r\n              text: \"Pink\",\r\n              value: \"Pink\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          text: \"Category 2\",\r\n          value: \"Category 2\",\r\n          children: [\r\n            {\r\n              text: \"Green\",\r\n              value: \"Green\",\r\n            },\r\n            {\r\n              text: \"Black\",\r\n              value: \"Black\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      filterMode: \"tree\",\r\n      filterSearch: true,\r\n      onFilter: (value, record) => record.name.includes(value),\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: \"Age\",\r\n      dataIndex: \"age\",\r\n      sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      filters: [\r\n        {\r\n          text: props.data.address,\r\n          value: props.data.address,\r\n        },\r\n        {\r\n          text: \"London\",\r\n          value: \"London\",\r\n        },\r\n        {\r\n          text: \"New York\",\r\n          value: \"New York\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.address.startsWith(value),\r\n      filterSearch: true,\r\n      width: \"40%\",\r\n    },\r\n\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      filters: [\r\n        {\r\n          text: props.data.phone,\r\n          value: props.data.phone,\r\n        },\r\n        {\r\n          text: \"London\",\r\n          value: \"London\",\r\n        },\r\n        {\r\n          text: \"New York\",\r\n          value: \"New York\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.phone.startsWith(value),\r\n      filterSearch: true,\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n      filters: [\r\n        {\r\n          text: props.data.city,\r\n          value: props.data.city,\r\n        },\r\n        {\r\n          text: \"London\",\r\n          value: \"London\",\r\n        },\r\n        {\r\n          text: \"New York\",\r\n          value: \"New York\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.city.startsWith(value),\r\n      filterSearch: true,\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Country\",\r\n      dataIndex: \"country\",\r\n      filters: [\r\n        {\r\n          text: props.data.country,\r\n          value: props.data.country,\r\n        },\r\n        {\r\n          text: \"London\",\r\n          value: \"London\",\r\n        },\r\n        {\r\n          text: \"New York\",\r\n          value: \"New York\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.country.startsWith(value),\r\n      filterSearch: true,\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"alternateAddress\",\r\n      dataIndex: \"alternateAddress\",\r\n      filters: [\r\n        {\r\n          text: props.data.alternateAddress,\r\n          value: props.data.alternateAddress,\r\n        },\r\n        {\r\n          text: \"London\",\r\n          value: \"London\",\r\n        },\r\n        {\r\n          text: \"New York\",\r\n          value: \"New York\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.alternateAddress.startsWith(value),\r\n      filterSearch: true,\r\n      width: \"40%\",\r\n    },\r\n\r\n    {\r\n      // key: \"5\",\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      render: () => <a onClick={toggle}>Edit</a>,\r\n    },\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      key: \"y\",\r\n      render: (record) => {\r\n        data.length >= 1 ? (\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={handleDelete(record)}\r\n          ></Popconfirm>\r\n        ) : null;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      name: props.data.firstName,\r\n      age: props.data.age,\r\n      address: props.data.address,\r\n      phone: props.data.phone,\r\n      city: props.data.city,\r\n      country: props.data.country,\r\n      alternateAddress: props.data.alternateAddress,\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Jim Green\",\r\n      age: 42,\r\n      address: \"London No. 1 Lake Park\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Joe Black\",\r\n      age: 32,\r\n      address: \"Sidney No. 1 Lake Park\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Jim Red\",\r\n      age: 32,\r\n      address: \"London No. 2 Lake Park\",\r\n    },\r\n  ];\r\n\r\n  const handleDelete = (key) => {\r\n    // const dataSource = [...this.state.dataSource];\r\n    // this.setState({\r\n    //   dataSource: dataSource.filter((item) => item.key !== key),\r\n    // });\r\n  };\r\n\r\n  function onChange(pagination, filters, sorter, extra) {\r\n    console.log(\"params\", pagination, filters, sorter, extra);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table columns={columns} dataSource={data} onChange={onChange} />\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader isClose={modal} toggle={toggle}>\r\n            Update\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Dashboard />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserData;\r\n"]},"metadata":{},"sourceType":"module"}