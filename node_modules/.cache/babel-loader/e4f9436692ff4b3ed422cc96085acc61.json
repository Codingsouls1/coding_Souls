{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _objectSpread from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\dashboards\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // javascipt plugin for creating charts\n\nimport { Chart } from \"chart.js\";\nimport \"./Dashboard.css\"; // import the stylesheet\n\nimport \"react-step-progress/dist/index.css\"; // import { chartOptions, parseOptions } from \"variables/charts.js\";\n\nimport StaffMember from \"../staffMemeber/StaffMember\";\nimport ResidentialDetail from \"../ResidentialDetail/ResidentialDetail\";\nimport ContactDetail from \"../ContactDetail/ContactDetail\"; // import OccupationalDetail from \"../OccupationalDetail/OccupationalDetail\";\n// if (window.Chart) {\n//   parseOptions(Chart, chartOptions());\n// }\n// import the stylesheet\n\nimport \"react-step-progress/dist/index.css\";\nimport { Steps, Button, message } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Step = Steps.Step;\n\nfunction Dashboard() {\n  _s();\n\n  var _this = this;\n\n  //state for steps\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      step = _React$useState2[0],\n      setStep = _React$useState2[1]; // function for going to next step by increasing step state by 1\n\n\n  var nextStep = function nextStep() {\n    setStep(step + 1);\n  }; // function for going to previous step by decreasing step state by 1\n\n\n  var prevStep = function prevStep() {\n    setStep(step - 1);\n  }; //state for form data\n\n\n  var _React$useState3 = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    address: \"\",\n    pin: \"\",\n    city: \"\",\n    country: \"\",\n    age: \"\",\n    alternateAddress: \"\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      formData = _React$useState4[0],\n      setFormData = _React$useState4[1]; // handling form input data by taking onchange value and updating our previous form data state\n\n\n  var handleInputData = function handleInputData(input) {\n    return function (e) {\n      // input value from the form\n      var value = e.target.value; //updating for data state taking previous state and then adding new value to create new object\n\n      setFormData(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, value));\n      });\n    };\n  }; // switch (step) {\n  //   case 1:\n  //     return (\n  //       <StaffMember\n  //         nextStep={nextStep}\n  //         handleFormData={handleInputData}\n  //         values={formData}\n  //       />\n  //     );\n  //   case 2:\n  //     return (\n  //       <ResidentialDetail\n  //         nextStep={nextStep}\n  //         prevStep={prevStep}\n  //         handleFormData={handleInputData}\n  //         values={formData}\n  //       />\n  //     );\n  //   case 3:\n  //     return (\n  //       <ContactDetail\n  //         nextStep={nextStep}\n  //         prevStep={prevStep}\n  //         handleFormData={handleInputData}\n  //         values={formData}\n  //       />\n  //     );\n  //   case 4:\n  //     return <UserData data={formData} />;\n  //   default:\n  //     break;\n  // }\n\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      current = _React$useState6[0],\n      setCurrent = _React$useState6[1];\n\n  var next = function next() {\n    setCurrent(current + 1);\n  };\n\n  var prev = function prev() {\n    setCurrent(current - 1);\n  };\n\n  var steps = [{\n    title: \"StaffMember\",\n    content: /*#__PURE__*/_jsxDEV(StaffMember, {\n      nextStep: next,\n      prevStep: prev,\n      handleFormData: handleInputData,\n      values: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"ResidentialDetail\",\n    content: /*#__PURE__*/_jsxDEV(ResidentialDetail, {\n      nextStep: next,\n      prevStep: prev,\n      handleFormData: handleInputData,\n      values: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"ContactDetail\",\n    content: /*#__PURE__*/_jsxDEV(ContactDetail, {\n      nextStep: next,\n      prevStep: prev,\n      handleFormData: handleInputData,\n      values: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Steps, {\n      current: current,\n      children: steps.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          title: item.title\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-content\",\n      children: steps[current].content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"KcGyFNikWEMykrbwTecBN6TD+A8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/dashboards/Dashboard.js"],"names":["React","Chart","StaffMember","ResidentialDetail","ContactDetail","Steps","Button","message","Step","Dashboard","useState","step","setStep","nextStep","prevStep","firstName","lastName","email","phone","password","address","pin","city","country","age","alternateAddress","formData","setFormData","handleInputData","input","e","value","target","prevState","current","setCurrent","next","prev","steps","title","content","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// javascipt plugin for creating charts\nimport { Chart } from \"chart.js\";\n\nimport \"./Dashboard.css\";\n\n// import the stylesheet\nimport \"react-step-progress/dist/index.css\";\n\n// import { chartOptions, parseOptions } from \"variables/charts.js\";\nimport StaffMember from \"../staffMemeber/StaffMember\";\nimport ResidentialDetail from \"../ResidentialDetail/ResidentialDetail\";\nimport ContactDetail from \"../ContactDetail/ContactDetail\";\n// import OccupationalDetail from \"../OccupationalDetail/OccupationalDetail\";\n\n// if (window.Chart) {\n//   parseOptions(Chart, chartOptions());\n// }\n\n// import the stylesheet\nimport \"react-step-progress/dist/index.css\";\n\nimport { Steps, Button, message } from \"antd\";\n\nconst { Step } = Steps;\n\nfunction Dashboard() {\n  //state for steps\n  const [step, setStep] = React.useState(1);\n\n  // function for going to next step by increasing step state by 1\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  // function for going to previous step by decreasing step state by 1\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  //state for form data\n  const [formData, setFormData] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    address: \"\",\n    pin: \"\",\n    city: \"\",\n    country: \"\",\n    age: \"\",\n    alternateAddress: \"\",\n  });\n\n  // handling form input data by taking onchange value and updating our previous form data state\n  const handleInputData = (input) => (e) => {\n    // input value from the form\n    const { value } = e.target;\n\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData((prevState) => ({\n      ...prevState,\n      [input]: value,\n    }));\n  };\n\n  // switch (step) {\n  //   case 1:\n  //     return (\n  //       <StaffMember\n  //         nextStep={nextStep}\n  //         handleFormData={handleInputData}\n  //         values={formData}\n  //       />\n  //     );\n  //   case 2:\n  //     return (\n  //       <ResidentialDetail\n  //         nextStep={nextStep}\n  //         prevStep={prevStep}\n  //         handleFormData={handleInputData}\n  //         values={formData}\n  //       />\n  //     );\n  //   case 3:\n  //     return (\n  //       <ContactDetail\n  //         nextStep={nextStep}\n  //         prevStep={prevStep}\n  //         handleFormData={handleInputData}\n  //         values={formData}\n  //       />\n  //     );\n\n  //   case 4:\n  //     return <UserData data={formData} />;\n\n  //   default:\n  //     break;\n  // }\n\n  const [current, setCurrent] = React.useState(0);\n\n  const next = () => {\n    setCurrent(current + 1);\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  const steps = [\n    {\n      title: \"StaffMember\",\n      content: (\n        <StaffMember\n          nextStep={next}\n          prevStep={prev}\n          handleFormData={handleInputData}\n          values={formData}\n        />\n      ),\n    },\n    {\n      title: \"ResidentialDetail\",\n      content: (\n        <ResidentialDetail\n          nextStep={next}\n          prevStep={prev}\n          handleFormData={handleInputData}\n          values={formData}\n        />\n      ),\n    },\n    {\n      title: \"ContactDetail\",\n      content: (\n        <ContactDetail\n          nextStep={next}\n          prevStep={prev}\n          handleFormData={handleInputData}\n          values={formData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Steps current={current}>\n        {steps.map((item) => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n      <div className=\"steps-content\">{steps[current].content}</div>\n      {/* <div className=\"steps-action\">\n        {current < steps.length - 1 && (\n          <Button type=\"primary\" onClick={() => next()}>\n            Next\n          </Button>\n        )}\n        {current === steps.length - 1 && (\n          <Button\n            type=\"primary\"\n            onClick={() => message.success(\"Processing complete!\")}\n          >\n            Done\n          </Button>\n        )}\n        {current > 0 && (\n          <Button style={{ margin: \"0 8px\" }} onClick={() => prev()}>\n            Previous\n          </Button>\n        )}\n      </div> */}\n    </>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}