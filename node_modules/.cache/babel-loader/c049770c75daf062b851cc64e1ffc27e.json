{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n// /*!\n// =========================================================\n// * Argon Dashboard PRO React - v1.2.1\n// =========================================================\n// * Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n// * Coded by Creative Tim\n// =========================================================\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classnames from \"classnames\"; // JavaScript library that creates a callendar with events\n\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interaction from \"@fullcalendar/interaction\"; // react component used to create sweet alerts\n\nimport ReactBSAlert from \"react-bootstrap-sweetalert\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, FormGroup, Form, Input, Modal, Container, Row, Col, Breadcrumb, BreadcrumbItem, Label } from \"reactstrap\"; // core components\n// import { events as eventsVariables } from \"variables/general.js\";\n//React Datepicker\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getAllEvents } from \"api/Calendar\";\nimport { createAllEvents } from \"api/Calendar\";\nimport { editAllEvents } from \"api/Calendar\";\nimport { deleteAllEvents } from \"api/Calendar\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar calendar;\n\nfunction CalendarView() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      startDate = _React$useState2[0],\n      setStartDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Date()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endDate = _React$useState4[0],\n      setEndDate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      events = _React$useState6[0],\n      setEvents = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      alert = _React$useState8[0],\n      setAlert = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      modalAdd = _React$useState10[0],\n      setModalAdd = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      modalChange = _React$useState12[0],\n      setModalChange = _React$useState12[1]; // const [startDate, setStartDate] = React.useState(null);\n  // const [endDate, setEndDate] = React.useState(null);\n\n\n  var _React$useState13 = React.useState(null),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      radios = _React$useState14[0],\n      setRadios = _React$useState14[1];\n\n  var _React$useState15 = React.useState(null),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      eventId = _React$useState16[0],\n      setEventId = _React$useState16[1];\n\n  var _React$useState17 = React.useState(null),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      eventTitle = _React$useState18[0],\n      setEventTitle = _React$useState18[1];\n\n  var _React$useState19 = React.useState(null),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      eventDescription = _React$useState20[0],\n      setEventDescription = _React$useState20[1];\n\n  var _React$useState21 = React.useState(null),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      description = _React$useState22[0],\n      setDescription = _React$useState22[1]; // eslint-disable-next-line\n\n\n  var _React$useState23 = React.useState(null),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      event = _React$useState24[0],\n      setEvent = _React$useState24[1];\n\n  var _React$useState25 = React.useState(null),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      currentDate = _React$useState26[0],\n      setCurrentDate = _React$useState26[1];\n\n  var calendarRef = React.useRef(null);\n\n  var _React$useState27 = React.useState(true),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      check = _React$useState28[0],\n      setCheck = _React$useState28[1];\n\n  var createCalendar = function createCalendar() {\n    calendar = new Calendar(calendarRef.current, {\n      plugins: [interaction, dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      selectable: true,\n      // editable: true,\n      // events: events,\n      headerToolbar: \"\",\n      // Add new event\n      select: function select(info) {\n        console.log(\"info\", info);\n        setModalAdd(true);\n        setStartDate(startDate);\n        setEndDate(endDate);\n        setRadios(\"bg-info\");\n      },\n      // Edit calendar event action\n      eventClick: function eventClick(_ref) {\n        var event = _ref.event;\n        console.log(\"event\", event);\n        setEventId(event.id);\n        setEventTitle(event.title);\n        setDescription(event.extendedProps.description);\n        setRadios(\"exams\");\n        setEvent(event);\n        setModalChange(true);\n      }\n    });\n    calendar.render();\n    setCurrentDate(calendar.view.title);\n  };\n\n  var changeView = function changeView(newView) {\n    calendar.changeView(newView);\n    setCurrentDate(calendar.view.title);\n  };\n\n  React.useEffect(function () {\n    createCalendar(); //ffy eslint-disable-next-line\n\n    getEvents();\n  }, [check]); //Get All Events\n\n  var getEvents = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var allEvents, array;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllEvents();\n\n            case 2:\n              allEvents = _context.sent;\n              console.log(\"allEvents\", allEvents);\n              array = allEvents.map(function (even) {\n                console.log(even);\n                return calendar.addEvent({\n                  title: even.event_name,\n                  start: even.start_date,\n                  end: even.end_date,\n                  className: even.event_type,\n                  description: even.description,\n                  id: even._id\n                });\n              });\n              setEvents(array);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getEvents() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //Add Events\n\n\n  var addNewEvent = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var row;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              row = {\n                event_name: eventTitle,\n                start_date: new Date(startDate),\n                end_date: new Date(endDate),\n                description: description,\n                event_type: radios\n              };\n              _context2.prev = 2;\n\n              if (!localStorage.getItem(\"token\")) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 6;\n              return createAllEvents(row);\n\n            case 6:\n              toast.success(\"Evnet Added Successfully\");\n\n              if (check === true) {\n                setCheck(false);\n              } else {\n                setCheck(true);\n              }\n\n              setModalAdd(false); // setEvents(newEvents);\n\n              setStartDate(undefined);\n              setEndDate(undefined);\n              setRadios(\"bg-info\");\n              setEventTitle(undefined);\n              _context2.next = 16;\n              break;\n\n            case 15:\n              return _context2.abrupt(\"return\", toast.error(\"Your are not Login as Admin!\"));\n\n            case 16:\n              _context2.next = 21;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](2);\n              toast.error(\"Something Went Wrong!\");\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 18]]);\n    }));\n\n    return function addNewEvent(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //Update Events\n\n\n  var changeEvent = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var row, updateEvents;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              row = {\n                event_name: eventTitle,\n                start_date: new Date(startDate),\n                end_date: new Date(endDate),\n                description: description,\n                event_type: radios\n              };\n              _context3.prev = 1;\n\n              if (!localStorage.getItem(\"token\")) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 5;\n              return editAllEvents(eventId, row);\n\n            case 5:\n              updateEvents = _context3.sent;\n              setEvents(updateEvents);\n              toast.success(\"Events Updated Successfully\");\n\n              if (check === true) {\n                setCheck(false);\n              } else {\n                setCheck(true);\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 11:\n              return _context3.abrupt(\"return\", toast.error(\"You are not Login as Admin!\"));\n\n            case 12:\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](1);\n              toast.error(\"Something Went Wrong!\");\n\n            case 17:\n              setModalChange(false);\n              setRadios(\"bg-info\");\n              setEventTitle(undefined);\n              setEventDescription(undefined);\n              setEventId(undefined);\n              setEvent(undefined);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 14]]);\n    }));\n\n    return function changeEvent() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); //Delete Events Confirm Box\n\n\n  var deleteEventSweetAlert = function deleteEventSweetAlert() {\n    setAlert( /*#__PURE__*/_jsxDEV(ReactBSAlert, {\n      warning: true,\n      style: {\n        display: \"block\",\n        marginTop: \"-100px\"\n      },\n      title: \"Are you sure?\",\n      onConfirm: function onConfirm() {\n        setAlert(false);\n        setRadios(\"bg-info\");\n        setEventTitle(undefined);\n        setEventDescription(undefined);\n        setEventId(undefined);\n      },\n      onCancel: function onCancel() {\n        return deleteEvent();\n      },\n      confirmBtnCssClass: \"btn-secondary\",\n      cancelBtnBsStyle: \"danger\",\n      confirmBtnText: \"Cancel\",\n      cancelBtnText: \"Yes, delete it\",\n      showCancel: true,\n      btnSize: \"\",\n      children: \"You won't be able to revert this!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, _this));\n  }; //Delete Events\n\n\n  var deleteEvent = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var deleEvents;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return deleteAllEvents(eventId);\n\n            case 3:\n              deleEvents = _context4.sent;\n              setEvent(undefined);\n              setAlert( /*#__PURE__*/_jsxDEV(ReactBSAlert, {\n                success: true,\n                style: {\n                  display: \"block\",\n                  marginTop: \"-100px\"\n                },\n                title: \"Success\",\n                onConfirm: function onConfirm() {\n                  return setAlert(null);\n                },\n                onCancel: function onCancel() {\n                  return setAlert(null);\n                },\n                confirmBtnBsStyle: \"primary\",\n                confirmBtnText: \"Ok\",\n                btnSize: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 9\n              }, _this));\n              setEvents(deleEvents);\n              setCheck(true);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              toast.error(\"Something Went Wrong!\");\n\n            case 13:\n              setModalChange(false);\n              setRadios(\"bg-info\");\n              setEventTitle(undefined);\n              setEventDescription(undefined);\n              setEventId(undefined);\n              setEvent(undefined);\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 10]]);\n    }));\n\n    return function deleteEvent() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alert, /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"colored\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header header-dark bg-info pb-6 content__title content__title--calendar\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-body\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center py-4\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\",\n                children: currentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n                className: \"d-none d-md-inline-block ml-lg-4\",\n                listClassName: \"breadcrumb-links breadcrumb-dark\",\n                children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#pablo\",\n                    onClick: function onClick(e) {\n                      return e.preventDefault();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-home\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#pablo\",\n                    onClick: function onClick(e) {\n                      return e.preventDefault();\n                    },\n                    children: \"Dashboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                  \"aria-current\": \"page\",\n                  className: \"active\",\n                  children: \"Calendar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-3 mt-md-0 text-md-right\",\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"fullcalendar-btn-prev btn-neutral\",\n                color: \"default\",\n                onClick: function onClick() {\n                  calendar.next();\n                },\n                size: \"sm\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-angle-left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"fullcalendar-btn-next btn-neutral\",\n                color: \"default\",\n                onClick: function onClick() {\n                  calendar.prev();\n                },\n                size: \"sm\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-angle-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"month\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridMonth\");\n                },\n                size: \"sm\",\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"basicWeek\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridWeek\");\n                },\n                size: \"sm\",\n                children: \"Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"basicDay\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridDay\");\n                },\n                size: \"sm\",\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--6\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-calendar\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"h3 mb-0\",\n                children: \"Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"p-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"calendar\",\n                \"data-toggle\": \"calendar\",\n                id: \"calendar\",\n                ref: calendarRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalAdd,\n            toggle: function toggle() {\n              return setModalAdd(false);\n            },\n            className: \"modal-dialog-centered modal-secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"new-event--form\",\n                onSubmit: addNewEvent,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Event title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control-alternative new-event--title\",\n                    placeholder: \"Event Title\",\n                    type: \"text\",\n                    onChange: function onChange(e) {\n                      return setEventTitle(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"From\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 w-100 border border-light\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\",\n                    selected: startDate,\n                    selectsStart: true,\n                    startDate: startDate,\n                    onChange: function onChange(date) {\n                      return setStartDate(date);\n                    },\n                    strictParsing: true,\n                    value: startDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 w-100 border border-light\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\",\n                    selected: endDate,\n                    selectsStart: true,\n                    startDate: endDate,\n                    onChange: function onChange(date) {\n                      return setEndDate(date);\n                    },\n                    strictParsing: true,\n                    value: endDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"form-control-alternative new-event--title w-100 descrip\",\n                    placeholder: \"Description\",\n                    type: \"text\",\n                    onChange: function onChange(e) {\n                      return setDescription(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label d-block mb-3\",\n                    children: \"Status color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    className: \"btn-group-toggle btn-group-colors event-tag\",\n                    \"data-toggle\": \"buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-info\", {\n                        active: radios === \"bg-info\"\n                      }),\n                      color: \"\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-info\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-warning\", {\n                        active: radios === \"bg-warning\"\n                      }),\n                      color: \"\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-warning\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-danger\", {\n                        active: radios === \"bg-danger\"\n                      }),\n                      color: \"\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-danger\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-success\", {\n                        active: radios === \"bg-success\"\n                      }),\n                      color: \"\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-success\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-default\", {\n                        active: radios === \"bg-default\"\n                      }),\n                      color: \"\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-default\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-primary\", {\n                        active: radios === \"bg-primary\"\n                      }),\n                      color: \"\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-primary\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-footer\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"new-event--add\",\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Add event\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"ml-auto\",\n                    color: \"link\",\n                    type: \"button\",\n                    onClick: function onClick() {\n                      return setModalAdd(false);\n                    },\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalChange,\n            toggle: function toggle() {\n              return setModalChange(false);\n            },\n            className: \"modal-dialog-centered modal-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"edit-event--form\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Event title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control-alternative edit-event--title\",\n                    placeholder: \"Event Title\",\n                    type: \"text\",\n                    defaultValue: eventTitle,\n                    onChange: function onChange(e) {\n                      return setEventTitle(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"From\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 endDate\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\",\n                    selected: startDate,\n                    selectsStart: true,\n                    startDate: startDate,\n                    onChange: function onChange(date) {\n                      return setStartDate(date);\n                    },\n                    strictParsing: true,\n                    value: startDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 endDate\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\" // dateFormat=\"'YYYY-MM-dd', h:mm\"\n                    ,\n                    selected: endDate,\n                    selectsStart: true,\n                    startDate: endDate,\n                    onChange: function onChange(date) {\n                      return setEndDate(date);\n                    },\n                    strictParsing: true,\n                    value: endDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control-alternative edit-event--description textarea-autosize\",\n                    placeholder: \"Event Desctiption\",\n                    type: \"textarea\",\n                    defaultValue: description,\n                    onChange: function onChange(e) {\n                      return setDescription(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"form-group--bar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"edit-event--id\",\n                  type: \"hidden\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label d-block mb-3\",\n                    children: \"Status color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    className: \"btn-group-toggle btn-group-colors event-tag mb-0\",\n                    \"data-toggle\": \"buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-info\", {\n                        active: radios === \"bg-info\"\n                      }),\n                      color: \"\",\n                      id: \"bg-info\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-info\");\n                      },\n                      value: \"bg-info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-warning\", {\n                        active: radios === \"bg-warning\"\n                      }),\n                      color: \"\",\n                      id: \"bg-warning\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-warning\");\n                      },\n                      value: \"bg-warning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-danger\", {\n                        active: radios === \"bg-danger\"\n                      }),\n                      color: \"\",\n                      id: \"bg-danger\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-danger\");\n                      },\n                      value: \"vaccation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: changeEvent,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"danger\",\n                onClick: function onClick() {\n                  setModalChange(false);\n                  deleteEventSweetAlert();\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"ml-auto\",\n                color: \"link\",\n                onClick: function onClick() {\n                  return setModalChange(false);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarView, \"4Snvc2coPKiWXLW9FNjzJhJBhbo=\");\n\n_c = CalendarView;\nexport default CalendarView; // import React, { useEffect, useState } from \"react\";\n// // nodejs library that concatenates classes\n// import classnames from \"classnames\";\n// // JavaScript library that creates a callendar with events\n// import { Calendar } from \"@fullcalendar/core\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interaction from \"@fullcalendar/interaction\";\n// // react component used to create sweet alerts\n// // import { allSessions } from \"api/session\";\n// import ReactBSAlert from \"react-bootstrap-sweetalert\";\n// // reactstrap components\n// import {\n//   Button,\n//   ButtonGroup,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   FormGroup,\n//   Form,\n//   Input,\n//   Modal,\n//   Container,\n//   Row,\n//   Col,\n//   Breadcrumb,\n//   BreadcrumbItem,\n//   Label,\n//   ModalBody,\n// } from \"reactstrap\";\n// // core components\n// // import { events as eventsVariables } from \"variables/general.js\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// //React Datepicker\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// //Authentication\n// // import { isAuthenticated } from \"api/auth\";\n// //Addevent and getEvent functions\n// // import {\n// //   addCalender,\n// //   getCalender,\n// //   updateEvent,\n// //   deleteEvents,\n// // } from \"api/calender\";\n// // import \"./Calender.css\";\n// //import Ant Table\n// // import AntTable from \"./tables/AntTable\";\n// import { Table } from \"ant-table-extensions\";\n// import { SearchOutlined } from \"@ant-design/icons\";\n// // import { updateCalendarError } from \"constants/errors\";\n// // import { deleteCalendarError, fetchingStaffFailed } from \"constants/errors\";\n// // import { allStaffs } from \"api/staff\";\n// import { getAllEvents } from \"api/Calendar\";\n// let calendar;\n// function CalendarView() {\n//   const [events, setEvents] = React.useState([]);\n//   const [alert, setAlert] = React.useState(null);\n//   const [modalAdd, setModalAdd] = React.useState(false);\n//   const [modalChange, setModalChange] = React.useState(false);\n//   const [startDate, setStartDate] = React.useState(new Date());\n//   const [endDate, setEndDate] = React.useState(new Date());\n//   const [radios, setRadios] = React.useState(null);\n//   const [eventId, setEventId] = React.useState(null);\n//   const [eventTitle, setEventTitle] = React.useState(null);\n//   const [eventDescription, setEventDescription] = React.useState(null);\n//   const [description, setDescription] = React.useState(null);\n//   const [assignTeachers, setAssignTeachers] = React.useState(null);\n//   // eslint-disable-next-line\n//   const [event, setEvent] = React.useState(null);\n//   const [currentDate, setCurrentDate] = React.useState(null);\n//   const calendarRef = React.useRef(null);\n//   const [checked, setChecked] = React.useState(false);\n//   const [sessions, setSessions] = useState([]);\n//   const [editing, setEditing] = React.useState(false);\n//   const [eventList, setEventList] = React.useState([]);\n//   const [selectSessionId, setSelectSessionId] = useState(\"\");\n//   const [staff, setStaff] = useState([]);\n//   const [staffId, setStaffId] = useState(\"\");\n//   const [filterSessionId, setFilterSessionId] = useState(\"\");\n//   const createCalendar = () => {\n//     calendar = new Calendar(calendarRef.current, {\n//       plugins: [interaction, dayGridPlugin],\n//       initialView: \"dayGridMonth\",\n//       selectable: true,\n//       // editable: true,\n//       // events: events,\n//       headerToolbar: \"\",\n//       // Add new event\n//       select: (info) => {\n//         console.log(\"info\", info);\n//         setModalAdd(true);\n//         setStartDate(startDate);\n//         setEndDate(endDate);\n//         setRadios(\"bg-info\");\n//       },\n//       // Edit calendar event action\n//       eventClick: ({ event }) => {\n//         console.log(\"event\", event);\n//         setEventId(event.id);\n//         setEventTitle(event.title);\n//         setDescription(event.extendedProps.description);\n//         setRadios(\"exams\");\n//         setEvent(event);\n//         setModalChange(true);\n//       },\n//     });\n//     calendar.render();\n//     setCurrentDate(calendar.view.title);\n//   };\n//   const changeView = (newView) => {\n//     calendar.changeView(newView);\n//     setCurrentDate(calendar.view.title);\n//   };\n//   const handleSubmitEvent = async () => {\n//     // var formData = new FormData();\n//     // formData.set(\"name\", eventTitle);\n//     // formData.set(\"event_from\", new Date(startDate));\n//     // formData.set(\"event_to\", new Date(endDate));\n//     // formData.set(\"description\", description);\n//     // // formData.set(\"assignTeachers\", assignTeachers)\n//     // formData.set(\"event_type\", radios);\n//     // // formData.set(\"school\", user.school);\n//     // formData.set(\"assignTeachers\", JSON.stringify([staffId]));\n//     // formData.set(\"session\", selectSessionId);\n//     // console.log(\"str\", new Date(startDate));\n//     // console.log(\"end\", new Date(endDate));\n//     const row = {\n//             event_name: eventTitle,\n//             start_date: startDate,\n//             end_date: endDate,\n//             description: description,\n//             event_type: radios,\n//           };\n//     try {\n//       // await addCalender(user._id, token, formData);\n//       setModalAdd(false);\n//       toast.success(\"Event addedd successfully\");\n//       setChecked(true);\n//     } catch (err) {\n//       toast.error(err);\n//     }\n//     setEvents(undefined);\n//     setStartDate(undefined);\n//     setEndDate(undefined);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//   };\n//   //Get Events\n//   useEffect(async () => {\n//     createCalendar();\n//     const allEvents = await getAllEvents();\n//     console.log(\"getevents\", allEvents);\n//     setEvents(events);\n//     events.map((events) => {\n//       return calendar.addEvent({\n//         title: events.event_name,\n//         start: events.start_date,\n//         end: events.end_date,\n//         className: events.event_type,\n//         description: events.description,\n//         id: events._id,\n//         // assignTeacher: assignTeachers,\n//       });\n//     });\n//     //Ant Table Data Source\n//     const data = [];\n//     events.map((events) => {\n//       data.push({\n//         key: events._id,\n//         event_name: events.name,\n//         start_date: events.event_from.split(\"T\")[0],\n//         end_date: events.event_to.split(\"T\")[0],\n//       });\n//     });\n//     setEventList(data);\n//     setChecked(false);\n//   }, [checked]);\n//   //Edit Events\n//   const changeEvent = async () => {\n//     var formData = new FormData();\n//     formData.set(\"name\", eventTitle);\n//     formData.set(\"event_from\", new Date(startDate));\n//     formData.set(\"event_to\", new Date(endDate));\n//     formData.set(\"description\", description);\n//     // formData.set(\"assignTeachers\", assignTeachers)\n//     formData.set(\"event_type\", radios);\n//     // formData.set(\"school\", user.school);\n//     try {\n//       // const updateEvents = await updateEvent();\n//       // setEvents(updateEvents);\n//       setChecked(true);\n//     } catch (err) {\n//       // toast.error(updateCalendarError);\n//     }\n//     setModalChange(false);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n//   //Delete Events Confirm Box\n//   const deleteEventSweetAlert = () => {\n//     setAlert(\n//       <ReactBSAlert\n//         warning\n//         style={{ display: \"block\", marginTop: \"-100px\" }}\n//         title=\"Are you sure?\"\n//         onConfirm={() => {\n//           setAlert(false);\n//           setRadios(\"bg-info\");\n//           setEventTitle(undefined);\n//           setEventDescription(undefined);\n//           setEventId(undefined);\n//         }}\n//         onCancel={() => deleteEvent()}\n//         confirmBtnCssClass=\"btn-secondary\"\n//         cancelBtnBsStyle=\"danger\"\n//         confirmBtnText=\"Cancel\"\n//         cancelBtnText=\"Yes, delete it\"\n//         showCancel\n//         btnSize=\"\"\n//       >\n//         You won't be able to revert this!\n//       </ReactBSAlert>\n//     );\n//   };\n//   //Delete Events\n//   const deleteEvent = async () => {\n//     try {\n//       // const { user, token } = isAuthenticated();\n//       // const deleEvents = await deleteEvents(eventId, user._id, token);\n//       setEvent(undefined);\n//       setAlert(\n//         <ReactBSAlert\n//           success\n//           style={{ display: \"block\", marginTop: \"-100px\" }}\n//           title=\"Success\"\n//           onConfirm={() => setAlert(null)}\n//           onCancel={() => setAlert(null)}\n//           confirmBtnBsStyle=\"primary\"\n//           confirmBtnText=\"Ok\"\n//           btnSize=\"\"\n//         ></ReactBSAlert>\n//       );\n//       // setEvents(deleEvents);\n//       setChecked(true);\n//     } catch (err) {\n//       // toast.error(deleteCalendarError);\n//     }\n//     setModalChange(false);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n//   useEffect(() => {\n//     let filteredEvents = events.filter(\n//       (event) => event.session.toString() === filterSessionId.toString()\n//     );\n//     const data = [];\n//     filteredEvents.map((events) => {\n//       data.push({\n//         key: events._id,\n//         event_name: events.name,\n//         start_date: events.event_from.split(\"T\")[0],\n//         end_date: events.event_to.split(\"T\")[0],\n//       });\n//     });\n//     setEventList(data);\n//     setChecked(false);\n//   }, [filterSessionId]);\n//   //Ant Table Column\n//   const columns = [\n//     {\n//       title: \"Event Name\",\n//       dataIndex: \"event_name\",\n//       width: 150,\n//       sorter: (a, b) => a.event_name > b.event_name,\n//       filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n//         return (\n//           <>\n//             <Input\n//               autoFocus\n//               placeholder=\"Type text here\"\n//               value={selectedKeys[0]}\n//               onChange={(e) => {\n//                 setSelectedKeys(e.target.value ? [e.target.value] : []);\n//                 confirm({ closeDropdown: false });\n//               }}\n//               onBlur={() => {\n//                 confirm();\n//               }}\n//             ></Input>\n//           </>\n//         );\n//       },\n//       filterIcon: () => {\n//         return <SearchOutlined />;\n//       },\n//       onFilter: (value, record) => {\n//         return record.event_name.toLowerCase().includes(value.toLowerCase());\n//       },\n//     },\n//     {\n//       title: \"Start Date\",\n//       dataIndex: \"start_date\",\n//       width: 150,\n//       sorter: (a, b) => a.start_date > b.start_date,\n//       filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n//         return (\n//           <>\n//             <Input\n//               autoFocus\n//               placeholder=\"Type text here\"\n//               value={selectedKeys[0]}\n//               onChange={(e) => {\n//                 setSelectedKeys(e.target.value ? [e.target.value] : []);\n//                 confirm({ closeDropdown: false });\n//               }}\n//               onBlur={() => {\n//                 confirm();\n//               }}\n//             ></Input>\n//           </>\n//         );\n//       },\n//       filterIcon: () => {\n//         return <SearchOutlined />;\n//       },\n//       onFilter: (value, record) => {\n//         return record.start_date.toLowerCase().includes(value.toLowerCase());\n//       },\n//     },\n//     {\n//       title: \"End Date\",\n//       dataIndex: \"end_date\",\n//       width: 150,\n//       sorter: (a, b) => a.end_date > b.end_date,\n//       filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n//         return (\n//           <>\n//             <Input\n//               autoFocus\n//               placeholder=\"Type text here\"\n//               value={selectedKeys[0]}\n//               onChange={(e) => {\n//                 setSelectedKeys(e.target.value ? [e.target.value] : []);\n//                 confirm({ closeDropdown: false });\n//               }}\n//               onBlur={() => {\n//                 confirm();\n//               }}\n//             ></Input>\n//           </>\n//         );\n//       },\n//       filterIcon: () => {\n//         return <SearchOutlined />;\n//       },\n//       onFilter: (value, record) => {\n//         return record.end_date.toLowerCase().includes(value.toLowerCase());\n//       },\n//     },\n//   ];\n//   return (\n//     <>\n//       {alert}\n//       <Modal\n//         style={{ height: \"75vh\" }}\n//         isOpen={editing}\n//         toggle={() => setEditing(false)}\n//         size=\"lg\"\n//         scrollable\n//       >\n//         <div className=\"modal-header\">\n//           <h2 className=\"modal-title\" id=\"modal-title-default\">\n//             {editing ? \"Event List\" : \"\"}\n//           </h2>\n//           <button\n//             aria-label=\"Close\"\n//             className=\"close\"\n//             data-dismiss=\"modal\"\n//             type=\"button\"\n//             onClick={() => setEditing(false)}\n//           >\n//             <span aria-hidden={true}>×</span>\n//           </button>\n//         </div>\n//         <ModalBody>\n//           {/* <Label className=\"form-control-label\" htmlFor=\"example-date-input\">\n//             Search\n//           </Label>\n//           <Input\n//             className=\"form-control-alternative new-event--title\"\n//             placeholder=\"Event Title\"\n//             type=\"text\"\n//             // onChange={(e) => setEventTitle(e.target.value)}\n//             required\n//           />\n//           <Button className=\"mt-2\">Search</Button> */}\n//           <Label className=\"form-control-label\" htmlFor=\"example-date-input\">\n//             Session\n//           </Label>\n//           <Input\n//             id=\"example4cols3Input\"\n//             type=\"select\"\n//             onChange={(e) => setFilterSessionId(e.target.value)}\n//             value={filterSessionId}\n//             required\n//           >\n//             <option value=\"\" disabled selected>\n//               All\n//             </option>\n//             {sessions.map((session) => {\n//               return (\n//                 <option value={session._id} key={session._id}>\n//                   {session.name}\n//                 </option>\n//               );\n//             })}\n//           </Input>\n//           <Table columns={columns} dataSource={eventList} />\n//         </ModalBody>\n//       </Modal>\n//       <ToastContainer\n//         position=\"bottom-right\"\n//         autoClose={1000}\n//         hideProgressBar={false}\n//         newestOnTop={false}\n//         closeOnClick\n//         rtl={false}\n//         pauseOnFocusLoss\n//         draggable\n//         pauseOnHover\n//         theme=\"colored\"\n//       />\n//       <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n//         <Container fluid>\n//           <div className=\"header-body\">\n//             <Row className=\"align-items-center py-4\">\n//               <Col lg=\"6\">\n//                 <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\n//                   {currentDate}\n//                 </h6>\n//                 <Breadcrumb\n//                   className=\"d-none d-md-inline-block ml-lg-4\"\n//                   listClassName=\"breadcrumb-links breadcrumb-dark\"\n//                 >\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       <i className=\"fas fa-home\" />\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       Dashboard\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem aria-current=\"page\" className=\"active\">\n//                     Calendar\n//                   </BreadcrumbItem>\n//                 </Breadcrumb>\n//               </Col>\n//               <Col className=\"mt-3 mt-md-0 text-md-right\" lg=\"6\">\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => setEditing(true)}\n//                   size=\"sm\"\n//                 >\n//                   View Events\n//                 </Button>\n//                 <Button\n//                   className=\"fullcalendar-btn-prev btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.next();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-left\" />\n//                 </Button>\n//                 <Button\n//                   className=\"fullcalendar-btn-next btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.prev();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-right\" />\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicYear\"\n//                   onClick={() => changeView(\"dayGridYear\")}\n//                   size=\"sm\"\n//                 >\n//                   Year\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicMonth\"\n//                   onClick={() => changeView(\"dayGridMonth\")}\n//                   size=\"sm\"\n//                 >\n//                   Month\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicWeek\"\n//                   onClick={() => changeView(\"dayGridWeek\")}\n//                   size=\"sm\"\n//                 >\n//                   Week\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicDay\"\n//                   onClick={() => changeView(\"dayGridDay\")}\n//                   size=\"sm\"\n//                 >\n//                   Day\n//                 </Button>\n//               </Col>\n//             </Row>\n//           </div>\n//         </Container>\n//       </div>\n//       <Container className=\"mt--6 w-100\" fluid>\n//         <Row>\n//           <div className=\"col\">\n//             <Card className=\"card-calendar w-100\">\n//               <CardHeader>\n//                 <h5 className=\"h3 mb-0\">Calendar</h5>\n//               </CardHeader>\n//               <CardBody className=\"p-0\">\n//                 <div\n//                   className=\"calendar\"\n//                   data-toggle=\"calendar\"\n//                   id=\"calendar\"\n//                   ref={calendarRef}\n//                 />\n//               </CardBody>\n//             </Card>\n//             {/* {permissions && permissions.includes(\"add\") && ( */}\n//             <Modal\n//               isOpen={modalAdd}\n//               toggle={() => setModalAdd(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <form className=\"new-event--form\">\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative new-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                       required\n//                     />\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       From\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={startDate}\n//                       selectsStart\n//                       startDate={startDate}\n//                       onChange={(date) => setStartDate(date)}\n//                       strictParsing\n//                       value={startDate}\n//                       required\n//                     />\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       To\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={endDate}\n//                       selectsStart\n//                       startDate={endDate}\n//                       onChange={(date) => setEndDate(date)}\n//                       strictParsing\n//                       value={endDate}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <textarea\n//                       className=\"form-control-alternative new-event--title w-100 descrip\"\n//                       placeholder=\"Description\"\n//                       type=\"text\"\n//                       onChange={(e) => setDescription(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup className=\"mb-0\">\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-info\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                         value=\"bg-info\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-warning\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                         value=\"bg-warning\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-danger\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                         value=\"bg-danger\"\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                 </form>\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <Button\n//                   className=\"new-event--add\"\n//                   color=\"primary\"\n//                   type=\"button\"\n//                   onClick={handleSubmitEvent}\n//                 >\n//                   Add event\n//                 </Button>\n//                 <Button\n//                   className=\"ml-auto\"\n//                   color=\"link\"\n//                   type=\"button\"\n//                   onClick={() => setModalAdd(false)}\n//                 >\n//                   Close\n//                 </Button>\n//               </div>\n//             </Modal>\n//             {/* )} */}\n//             {/* {permissions && permissions.includes(\"edit\") && ( */}\n//             <Modal\n//               isOpen={modalChange}\n//               toggle={() => setModalChange(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <Form className=\"edit-event--form\">\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       defaultValue={eventTitle}\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       From\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={startDate}\n//                       selectsStart\n//                       startDate={startDate}\n//                       onChange={(date) => setStartDate(date)}\n//                       strictParsing\n//                       value={startDate}\n//                       required\n//                     />\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       To\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       // dateFormat=\"'YYYY-MM-dd', h:mm\"\n//                       selected={endDate}\n//                       selectsStart\n//                       startDate={endDate}\n//                       onChange={(date) => setEndDate(date)}\n//                       strictParsing\n//                       value={endDate}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Description</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--description textarea-autosize\"\n//                       placeholder=\"Event Desctiption\"\n//                       type=\"textarea\"\n//                       defaultValue={description}\n//                       onChange={(e) => setDescription(e.target.value)}\n//                       required\n//                     />\n//                     <i className=\"form-group--bar\" />\n//                   </FormGroup>\n//                   <input className=\"edit-event--id\" type=\"hidden\" />\n//                   <FormGroup>\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-info\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                         value=\"bg-info\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-warning\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                         value=\"bg-warning\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-danger\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                         value=\"vaccation\"\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                 </Form>\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <Button color=\"primary\" onClick={changeEvent}>\n//                   Update\n//                 </Button>\n//                 <Button\n//                   color=\"danger\"\n//                   onClick={() => {\n//                     setModalChange(false);\n//                     deleteEventSweetAlert();\n//                   }}\n//                 >\n//                   Delete\n//                 </Button>\n//                 <Button\n//                   className=\"ml-auto\"\n//                   color=\"link\"\n//                   onClick={() => setModalChange(false)}\n//                 >\n//                   Close\n//                 </Button>\n//               </div>\n//             </Modal>\n//             {/* )} */}\n//           </div>\n//         </Row>\n//       </Container>\n//     </>\n//   );\n// }\n// export default CalendarView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/Calendar.js"],"names":["React","classnames","Calendar","dayGridPlugin","interaction","ReactBSAlert","Button","ButtonGroup","Card","CardHeader","CardBody","FormGroup","Form","Input","Modal","Container","Row","Col","Breadcrumb","BreadcrumbItem","Label","DatePicker","getAllEvents","createAllEvents","editAllEvents","deleteAllEvents","ToastContainer","toast","calendar","CalendarView","useState","Date","startDate","setStartDate","endDate","setEndDate","events","setEvents","alert","setAlert","modalAdd","setModalAdd","modalChange","setModalChange","radios","setRadios","eventId","setEventId","eventTitle","setEventTitle","eventDescription","setEventDescription","description","setDescription","event","setEvent","currentDate","setCurrentDate","calendarRef","useRef","check","setCheck","createCalendar","current","plugins","initialView","selectable","headerToolbar","select","info","console","log","eventClick","id","title","extendedProps","render","view","changeView","newView","useEffect","getEvents","allEvents","array","map","even","addEvent","event_name","start","start_date","end","end_date","className","event_type","_id","addNewEvent","e","preventDefault","row","localStorage","getItem","success","undefined","error","changeEvent","updateEvents","deleteEventSweetAlert","display","marginTop","deleteEvent","deleEvents","next","prev","target","value","date","active"],"mappings":"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":["// /*!\n\n// =========================================================\n// * Argon Dashboard PRO React - v1.2.1\n// =========================================================\n\n// * Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n// * Coded by Creative Tim\n\n// =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// */\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classnames from \"classnames\";\n// JavaScript library that creates a callendar with events\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interaction from \"@fullcalendar/interaction\";\n// react component used to create sweet alerts\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Modal,\n  Container,\n  Row,\n  Col,\n  Breadcrumb,\n  BreadcrumbItem,\n  Label,\n} from \"reactstrap\";\n// core components\n\n// import { events as eventsVariables } from \"variables/general.js\";\n\n//React Datepicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getAllEvents } from \"api/Calendar\";\nimport { createAllEvents } from \"api/Calendar\";\nimport { editAllEvents } from \"api/Calendar\";\nimport { deleteAllEvents } from \"api/Calendar\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nlet calendar;\n\nfunction CalendarView() {\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [events, setEvents] = React.useState(null);\n  const [alert, setAlert] = React.useState(null);\n  const [modalAdd, setModalAdd] = React.useState(false);\n  const [modalChange, setModalChange] = React.useState(false);\n  // const [startDate, setStartDate] = React.useState(null);\n  // const [endDate, setEndDate] = React.useState(null);\n  const [radios, setRadios] = React.useState(null);\n  const [eventId, setEventId] = React.useState(null);\n  const [eventTitle, setEventTitle] = React.useState(null);\n  const [eventDescription, setEventDescription] = React.useState(null);\n  const [description, setDescription] = React.useState(null);\n  // eslint-disable-next-line\n  const [event, setEvent] = React.useState(null);\n  const [currentDate, setCurrentDate] = React.useState(null);\n  const calendarRef = React.useRef(null);\n  const [check, setCheck] = React.useState(true);\n\n  const createCalendar = () => {\n    calendar = new Calendar(calendarRef.current, {\n      plugins: [interaction, dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      selectable: true,\n      // editable: true,\n      // events: events,\n      headerToolbar: \"\",\n\n      // Add new event\n      select: (info) => {\n        console.log(\"info\", info);\n        setModalAdd(true);\n        setStartDate(startDate);\n        setEndDate(endDate);\n        setRadios(\"bg-info\");\n      },\n\n      // Edit calendar event action\n      eventClick: ({ event }) => {\n        console.log(\"event\", event);\n        setEventId(event.id);\n        setEventTitle(event.title);\n        setDescription(event.extendedProps.description);\n        setRadios(\"exams\");\n        setEvent(event);\n        setModalChange(true);\n      },\n    });\n    calendar.render();\n    setCurrentDate(calendar.view.title);\n  };\n\n  const changeView = (newView) => {\n    calendar.changeView(newView);\n    setCurrentDate(calendar.view.title);\n  };\n\n  React.useEffect(() => {\n    createCalendar();\n    //ffy eslint-disable-next-line\n    getEvents();\n  }, [check]);\n\n  //Get All Events\n  const getEvents = async () => {\n    const allEvents = await getAllEvents();\n    console.log(\"allEvents\", allEvents);\n    const array = allEvents.map((even) => {\n      console.log(even);\n      return calendar.addEvent({\n        title: even.event_name,\n        start: even.start_date,\n        end: even.end_date,\n        className: even.event_type,\n        description: even.description,\n        id: even._id,\n      });\n    });\n    setEvents(array);\n  };\n\n  //Add Events\n  const addNewEvent = async (e) => {\n    e.preventDefault();\n    const row = {\n      event_name: eventTitle,\n      start_date: new Date(startDate),\n      end_date: new Date(endDate),\n      description: description,\n      event_type: radios,\n    };\n    try {\n      if (localStorage.getItem(\"token\")) {\n        await createAllEvents(row);\n        toast.success(\"Evnet Added Successfully\");\n        if (check === true) {\n          setCheck(false);\n        } else {\n          setCheck(true);\n        }\n        setModalAdd(false);\n        // setEvents(newEvents);\n        setStartDate(undefined);\n        setEndDate(undefined);\n        setRadios(\"bg-info\");\n        setEventTitle(undefined);\n      } else {\n        return toast.error(\"Your are not Login as Admin!\");\n      }\n    } catch (err) {\n      toast.error(\"Something Went Wrong!\");\n    }\n  };\n\n  //Update Events\n  const changeEvent = async () => {\n    const row = {\n      event_name: eventTitle,\n      start_date: new Date(startDate),\n      end_date: new Date(endDate),\n      description: description,\n      event_type: radios,\n    };\n    try {\n      if (localStorage.getItem(\"token\")) {\n        const updateEvents = await editAllEvents(eventId, row);\n        setEvents(updateEvents);\n        toast.success(\"Events Updated Successfully\");\n        if (check === true) {\n          setCheck(false);\n        } else {\n          setCheck(true);\n        }\n      } else {\n        return toast.error(\"You are not Login as Admin!\");\n      }\n    } catch (err) {\n      toast.error(\"Something Went Wrong!\");\n    }\n    setModalChange(false);\n    setRadios(\"bg-info\");\n    setEventTitle(undefined);\n    setEventDescription(undefined);\n    setEventId(undefined);\n    setEvent(undefined);\n  };\n\n  //Delete Events Confirm Box\n  const deleteEventSweetAlert = () => {\n    setAlert(\n      <ReactBSAlert\n        warning\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Are you sure?\"\n        onConfirm={() => {\n          setAlert(false);\n          setRadios(\"bg-info\");\n          setEventTitle(undefined);\n          setEventDescription(undefined);\n          setEventId(undefined);\n        }}\n        onCancel={() => deleteEvent()}\n        confirmBtnCssClass=\"btn-secondary\"\n        cancelBtnBsStyle=\"danger\"\n        confirmBtnText=\"Cancel\"\n        cancelBtnText=\"Yes, delete it\"\n        showCancel\n        btnSize=\"\"\n      >\n        You won't be able to revert this!\n      </ReactBSAlert>\n    );\n  };\n\n  //Delete Events\n  const deleteEvent = async () => {\n    try {\n      const deleEvents = await deleteAllEvents(eventId);\n      setEvent(undefined);\n      setAlert(\n        <ReactBSAlert\n          success\n          style={{ display: \"block\", marginTop: \"-100px\" }}\n          title=\"Success\"\n          onConfirm={() => setAlert(null)}\n          onCancel={() => setAlert(null)}\n          confirmBtnBsStyle=\"primary\"\n          confirmBtnText=\"Ok\"\n          btnSize=\"\"\n        ></ReactBSAlert>\n      );\n      setEvents(deleEvents);\n      setCheck(true);\n    } catch (err) {\n      toast.error(\"Something Went Wrong!\");\n    }\n    setModalChange(false);\n    setRadios(\"bg-info\");\n    setEventTitle(undefined);\n    setEventDescription(undefined);\n    setEventId(undefined);\n    setEvent(undefined);\n  };\n\n  return (\n    <>\n      {alert}\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n      <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n        <Container fluid>\n          <div className=\"header-body\">\n            <Row className=\"align-items-center py-4\">\n              <Col lg=\"6\">\n                <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\n                  {currentDate}\n                </h6>\n                <Breadcrumb\n                  className=\"d-none d-md-inline-block ml-lg-4\"\n                  listClassName=\"breadcrumb-links breadcrumb-dark\"\n                >\n                  <BreadcrumbItem>\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <i className=\"fas fa-home\" />\n                    </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem>\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      Dashboard\n                    </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem aria-current=\"page\" className=\"active\">\n                    Calendar\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </Col>\n              <Col className=\"mt-3 mt-md-0 text-md-right\" lg=\"6\">\n                <Button\n                  className=\"fullcalendar-btn-prev btn-neutral\"\n                  color=\"default\"\n                  onClick={() => {\n                    calendar.next();\n                  }}\n                  size=\"sm\"\n                >\n                  <i className=\"fas fa-angle-left\" />\n                </Button>\n                <Button\n                  className=\"fullcalendar-btn-next btn-neutral\"\n                  color=\"default\"\n                  onClick={() => {\n                    calendar.prev();\n                  }}\n                  size=\"sm\"\n                >\n                  <i className=\"fas fa-angle-right\" />\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"month\"\n                  onClick={() => changeView(\"dayGridMonth\")}\n                  size=\"sm\"\n                >\n                  Month\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"basicWeek\"\n                  onClick={() => changeView(\"dayGridWeek\")}\n                  size=\"sm\"\n                >\n                  Week\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"basicDay\"\n                  onClick={() => changeView(\"dayGridDay\")}\n                  size=\"sm\"\n                >\n                  Day\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n      <Container className=\"mt--6\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"card-calendar\">\n              <CardHeader>\n                <h5 className=\"h3 mb-0\">Calendar</h5>\n              </CardHeader>\n              <CardBody className=\"p-0\">\n                <div\n                  className=\"calendar\"\n                  data-toggle=\"calendar\"\n                  id=\"calendar\"\n                  ref={calendarRef}\n                />\n              </CardBody>\n            </Card>\n            <Modal\n              isOpen={modalAdd}\n              toggle={() => setModalAdd(false)}\n              className=\"modal-dialog-centered modal-secondary\"\n            >\n              <div className=\"modal-body\">\n                <form className=\"new-event--form\" onSubmit={addNewEvent}>\n                  <FormGroup>\n                    <label className=\"form-control-label\">Event title</label>\n                    <Input\n                      className=\"form-control-alternative new-event--title\"\n                      placeholder=\"Event Title\"\n                      type=\"text\"\n                      onChange={(e) => setEventTitle(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      From\n                    </label>\n                    <DatePicker\n                      className=\"p-2 w-100 border border-light\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      selected={startDate}\n                      selectsStart\n                      startDate={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      strictParsing\n                      value={startDate}\n                      required\n                    />\n                    <label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      To\n                    </label>\n                    <DatePicker\n                      className=\"p-2 w-100 border border-light\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      selected={endDate}\n                      selectsStart\n                      startDate={endDate}\n                      onChange={(date) => setEndDate(date)}\n                      strictParsing\n                      value={endDate}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <label className=\"form-control-label\">Description</label>\n                    <textarea\n                      className=\"form-control-alternative new-event--title w-100 descrip\"\n                      placeholder=\"Description\"\n                      type=\"text\"\n                      onChange={(e) => setDescription(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"mb-0\">\n                    <label className=\"form-control-label d-block mb-3\">\n                      Status color\n                    </label>\n                    <ButtonGroup\n                      className=\"btn-group-toggle btn-group-colors event-tag\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        className={classnames(\"bg-info\", {\n                          active: radios === \"bg-info\",\n                        })}\n                        color=\"\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-info\")}\n                      />\n                      <Button\n                        className={classnames(\"bg-warning\", {\n                          active: radios === \"bg-warning\",\n                        })}\n                        color=\"\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-warning\")}\n                      />\n                      <Button\n                        className={classnames(\"bg-danger\", {\n                          active: radios === \"bg-danger\",\n                        })}\n                        color=\"\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-danger\")}\n                      />\n                      <Button\n                        className={classnames(\"bg-success\", {\n                          active: radios === \"bg-success\",\n                        })}\n                        color=\"\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-success\")}\n                      />\n                      <Button\n                        className={classnames(\"bg-default\", {\n                          active: radios === \"bg-default\",\n                        })}\n                        color=\"\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-default\")}\n                      />\n                      <Button\n                        className={classnames(\"bg-primary\", {\n                          active: radios === \"bg-primary\",\n                        })}\n                        color=\"\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-primary\")}\n                      />\n                    </ButtonGroup>\n                  </FormGroup>\n                  <div className=\"modal-footer\">\n                    <Button\n                      className=\"new-event--add\"\n                      color=\"primary\"\n                      type=\"submit\"\n                    >\n                      Add event\n                    </Button>\n                    <Button\n                      className=\"ml-auto\"\n                      color=\"link\"\n                      type=\"button\"\n                      onClick={() => setModalAdd(false)}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </Modal>\n            <Modal\n              isOpen={modalChange}\n              toggle={() => setModalChange(false)}\n              className=\"modal-dialog-centered modal-secondary\"\n            >\n              <div className=\"modal-body\">\n                <Form className=\"edit-event--form\">\n                  <FormGroup>\n                    <label className=\"form-control-label\">Event title</label>\n                    <Input\n                      className=\"form-control-alternative edit-event--title\"\n                      placeholder=\"Event Title\"\n                      type=\"text\"\n                      defaultValue={eventTitle}\n                      onChange={(e) => setEventTitle(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      From\n                    </Label>\n                    <DatePicker\n                      className=\"p-2 endDate\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      selected={startDate}\n                      selectsStart\n                      startDate={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      strictParsing\n                      value={startDate}\n                      required\n                    />\n                    <Label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      To\n                    </Label>\n                    <DatePicker\n                      className=\"p-2 endDate\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      // dateFormat=\"'YYYY-MM-dd', h:mm\"\n                      selected={endDate}\n                      selectsStart\n                      startDate={endDate}\n                      onChange={(date) => setEndDate(date)}\n                      strictParsing\n                      value={endDate}\n                      required\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label className=\"form-control-label\">Description</label>\n                    <Input\n                      className=\"form-control-alternative edit-event--description textarea-autosize\"\n                      placeholder=\"Event Desctiption\"\n                      type=\"textarea\"\n                      defaultValue={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                      required\n                    />\n                    <i className=\"form-group--bar\" />\n                  </FormGroup>\n                  <input className=\"edit-event--id\" type=\"hidden\" />\n                  <FormGroup>\n                    <label className=\"form-control-label d-block mb-3\">\n                      Status color\n                    </label>\n                    <ButtonGroup\n                      className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        className={classnames(\"bg-info\", {\n                          active: radios === \"bg-info\",\n                        })}\n                        color=\"\"\n                        id=\"bg-info\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-info\")}\n                        value=\"bg-info\"\n                      />\n                      <Button\n                        className={classnames(\"bg-warning\", {\n                          active: radios === \"bg-warning\",\n                        })}\n                        color=\"\"\n                        id=\"bg-warning\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-warning\")}\n                        value=\"bg-warning\"\n                      />\n                      <Button\n                        className={classnames(\"bg-danger\", {\n                          active: radios === \"bg-danger\",\n                        })}\n                        color=\"\"\n                        id=\"bg-danger\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-danger\")}\n                        value=\"vaccation\"\n                      />\n                    </ButtonGroup>\n                  </FormGroup>\n                </Form>\n              </div>\n              <div className=\"modal-footer\">\n                <Button color=\"primary\" onClick={changeEvent}>\n                  Update\n                </Button>\n                <Button\n                  color=\"danger\"\n                  onClick={() => {\n                    setModalChange(false);\n                    deleteEventSweetAlert();\n                  }}\n                >\n                  Delete\n                </Button>\n                <Button\n                  className=\"ml-auto\"\n                  color=\"link\"\n                  onClick={() => setModalChange(false)}\n                >\n                  Close\n                </Button>\n              </div>\n            </Modal>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default CalendarView;\n\n// import React, { useEffect, useState } from \"react\";\n// // nodejs library that concatenates classes\n// import classnames from \"classnames\";\n// // JavaScript library that creates a callendar with events\n// import { Calendar } from \"@fullcalendar/core\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interaction from \"@fullcalendar/interaction\";\n// // react component used to create sweet alerts\n// // import { allSessions } from \"api/session\";\n// import ReactBSAlert from \"react-bootstrap-sweetalert\";\n// // reactstrap components\n// import {\n//   Button,\n//   ButtonGroup,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   FormGroup,\n//   Form,\n//   Input,\n//   Modal,\n//   Container,\n//   Row,\n//   Col,\n//   Breadcrumb,\n//   BreadcrumbItem,\n//   Label,\n//   ModalBody,\n// } from \"reactstrap\";\n// // core components\n\n// // import { events as eventsVariables } from \"variables/general.js\";\n\n// import { ToastContainer, toast } from \"react-toastify\";\n\n// //React Datepicker\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// //Authentication\n// // import { isAuthenticated } from \"api/auth\";\n\n// //Addevent and getEvent functions\n// // import {\n// //   addCalender,\n// //   getCalender,\n// //   updateEvent,\n// //   deleteEvents,\n// // } from \"api/calender\";\n\n// // import \"./Calender.css\";\n\n// //import Ant Table\n// // import AntTable from \"./tables/AntTable\";\n// import { Table } from \"ant-table-extensions\";\n// import { SearchOutlined } from \"@ant-design/icons\";\n// // import { updateCalendarError } from \"constants/errors\";\n// // import { deleteCalendarError, fetchingStaffFailed } from \"constants/errors\";\n\n// // import { allStaffs } from \"api/staff\";\n// import { getAllEvents } from \"api/Calendar\";\n// let calendar;\n\n// function CalendarView() {\n//   const [events, setEvents] = React.useState([]);\n//   const [alert, setAlert] = React.useState(null);\n//   const [modalAdd, setModalAdd] = React.useState(false);\n//   const [modalChange, setModalChange] = React.useState(false);\n//   const [startDate, setStartDate] = React.useState(new Date());\n//   const [endDate, setEndDate] = React.useState(new Date());\n//   const [radios, setRadios] = React.useState(null);\n//   const [eventId, setEventId] = React.useState(null);\n//   const [eventTitle, setEventTitle] = React.useState(null);\n//   const [eventDescription, setEventDescription] = React.useState(null);\n//   const [description, setDescription] = React.useState(null);\n//   const [assignTeachers, setAssignTeachers] = React.useState(null);\n//   // eslint-disable-next-line\n//   const [event, setEvent] = React.useState(null);\n//   const [currentDate, setCurrentDate] = React.useState(null);\n//   const calendarRef = React.useRef(null);\n//   const [checked, setChecked] = React.useState(false);\n//   const [sessions, setSessions] = useState([]);\n//   const [editing, setEditing] = React.useState(false);\n//   const [eventList, setEventList] = React.useState([]);\n//   const [selectSessionId, setSelectSessionId] = useState(\"\");\n//   const [staff, setStaff] = useState([]);\n//   const [staffId, setStaffId] = useState(\"\");\n//   const [filterSessionId, setFilterSessionId] = useState(\"\");\n\n//   const createCalendar = () => {\n//     calendar = new Calendar(calendarRef.current, {\n//       plugins: [interaction, dayGridPlugin],\n//       initialView: \"dayGridMonth\",\n//       selectable: true,\n//       // editable: true,\n//       // events: events,\n//       headerToolbar: \"\",\n\n//       // Add new event\n//       select: (info) => {\n//         console.log(\"info\", info);\n\n//         setModalAdd(true);\n//         setStartDate(startDate);\n//         setEndDate(endDate);\n//         setRadios(\"bg-info\");\n//       },\n\n//       // Edit calendar event action\n//       eventClick: ({ event }) => {\n//         console.log(\"event\", event);\n//         setEventId(event.id);\n//         setEventTitle(event.title);\n//         setDescription(event.extendedProps.description);\n//         setRadios(\"exams\");\n//         setEvent(event);\n//         setModalChange(true);\n//       },\n//     });\n//     calendar.render();\n//     setCurrentDate(calendar.view.title);\n//   };\n\n//   const changeView = (newView) => {\n//     calendar.changeView(newView);\n//     setCurrentDate(calendar.view.title);\n//   };\n\n//   const handleSubmitEvent = async () => {\n//     // var formData = new FormData();\n//     // formData.set(\"name\", eventTitle);\n//     // formData.set(\"event_from\", new Date(startDate));\n//     // formData.set(\"event_to\", new Date(endDate));\n//     // formData.set(\"description\", description);\n//     // // formData.set(\"assignTeachers\", assignTeachers)\n//     // formData.set(\"event_type\", radios);\n//     // // formData.set(\"school\", user.school);\n//     // formData.set(\"assignTeachers\", JSON.stringify([staffId]));\n//     // formData.set(\"session\", selectSessionId);\n\n//     // console.log(\"str\", new Date(startDate));\n//     // console.log(\"end\", new Date(endDate));\n//     const row = {\n//             event_name: eventTitle,\n//             start_date: startDate,\n//             end_date: endDate,\n//             description: description,\n//             event_type: radios,\n//           };\n//     try {\n//       // await addCalender(user._id, token, formData);\n//       setModalAdd(false);\n//       toast.success(\"Event addedd successfully\");\n//       setChecked(true);\n//     } catch (err) {\n//       toast.error(err);\n//     }\n//     setEvents(undefined);\n//     setStartDate(undefined);\n//     setEndDate(undefined);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//   };\n\n//   //Get Events\n//   useEffect(async () => {\n//     createCalendar();\n//     const allEvents = await getAllEvents();\n//     console.log(\"getevents\", allEvents);\n//     setEvents(events);\n//     events.map((events) => {\n//       return calendar.addEvent({\n//         title: events.event_name,\n//         start: events.start_date,\n//         end: events.end_date,\n//         className: events.event_type,\n//         description: events.description,\n//         id: events._id,\n//         // assignTeacher: assignTeachers,\n//       });\n//     });\n\n//     //Ant Table Data Source\n//     const data = [];\n//     events.map((events) => {\n//       data.push({\n//         key: events._id,\n//         event_name: events.name,\n//         start_date: events.event_from.split(\"T\")[0],\n//         end_date: events.event_to.split(\"T\")[0],\n//       });\n//     });\n//     setEventList(data);\n//     setChecked(false);\n//   }, [checked]);\n\n//   //Edit Events\n//   const changeEvent = async () => {\n//     var formData = new FormData();\n//     formData.set(\"name\", eventTitle);\n//     formData.set(\"event_from\", new Date(startDate));\n//     formData.set(\"event_to\", new Date(endDate));\n//     formData.set(\"description\", description);\n//     // formData.set(\"assignTeachers\", assignTeachers)\n//     formData.set(\"event_type\", radios);\n//     // formData.set(\"school\", user.school);\n\n//     try {\n//       // const updateEvents = await updateEvent();\n//       // setEvents(updateEvents);\n//       setChecked(true);\n//     } catch (err) {\n//       // toast.error(updateCalendarError);\n//     }\n//     setModalChange(false);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n\n//   //Delete Events Confirm Box\n//   const deleteEventSweetAlert = () => {\n//     setAlert(\n//       <ReactBSAlert\n//         warning\n//         style={{ display: \"block\", marginTop: \"-100px\" }}\n//         title=\"Are you sure?\"\n//         onConfirm={() => {\n//           setAlert(false);\n//           setRadios(\"bg-info\");\n//           setEventTitle(undefined);\n//           setEventDescription(undefined);\n//           setEventId(undefined);\n//         }}\n//         onCancel={() => deleteEvent()}\n//         confirmBtnCssClass=\"btn-secondary\"\n//         cancelBtnBsStyle=\"danger\"\n//         confirmBtnText=\"Cancel\"\n//         cancelBtnText=\"Yes, delete it\"\n//         showCancel\n//         btnSize=\"\"\n//       >\n//         You won't be able to revert this!\n//       </ReactBSAlert>\n//     );\n//   };\n\n//   //Delete Events\n//   const deleteEvent = async () => {\n//     try {\n//       // const { user, token } = isAuthenticated();\n//       // const deleEvents = await deleteEvents(eventId, user._id, token);\n//       setEvent(undefined);\n//       setAlert(\n//         <ReactBSAlert\n//           success\n//           style={{ display: \"block\", marginTop: \"-100px\" }}\n//           title=\"Success\"\n//           onConfirm={() => setAlert(null)}\n//           onCancel={() => setAlert(null)}\n//           confirmBtnBsStyle=\"primary\"\n//           confirmBtnText=\"Ok\"\n//           btnSize=\"\"\n//         ></ReactBSAlert>\n//       );\n//       // setEvents(deleEvents);\n//       setChecked(true);\n//     } catch (err) {\n//       // toast.error(deleteCalendarError);\n//     }\n//     setModalChange(false);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n\n//   useEffect(() => {\n//     let filteredEvents = events.filter(\n//       (event) => event.session.toString() === filterSessionId.toString()\n//     );\n//     const data = [];\n//     filteredEvents.map((events) => {\n//       data.push({\n//         key: events._id,\n//         event_name: events.name,\n//         start_date: events.event_from.split(\"T\")[0],\n//         end_date: events.event_to.split(\"T\")[0],\n//       });\n//     });\n//     setEventList(data);\n//     setChecked(false);\n//   }, [filterSessionId]);\n\n//   //Ant Table Column\n//   const columns = [\n//     {\n//       title: \"Event Name\",\n//       dataIndex: \"event_name\",\n//       width: 150,\n//       sorter: (a, b) => a.event_name > b.event_name,\n//       filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n//         return (\n//           <>\n//             <Input\n//               autoFocus\n//               placeholder=\"Type text here\"\n//               value={selectedKeys[0]}\n//               onChange={(e) => {\n//                 setSelectedKeys(e.target.value ? [e.target.value] : []);\n//                 confirm({ closeDropdown: false });\n//               }}\n//               onBlur={() => {\n//                 confirm();\n//               }}\n//             ></Input>\n//           </>\n//         );\n//       },\n//       filterIcon: () => {\n//         return <SearchOutlined />;\n//       },\n//       onFilter: (value, record) => {\n//         return record.event_name.toLowerCase().includes(value.toLowerCase());\n//       },\n//     },\n//     {\n//       title: \"Start Date\",\n//       dataIndex: \"start_date\",\n//       width: 150,\n//       sorter: (a, b) => a.start_date > b.start_date,\n//       filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n//         return (\n//           <>\n//             <Input\n//               autoFocus\n//               placeholder=\"Type text here\"\n//               value={selectedKeys[0]}\n//               onChange={(e) => {\n//                 setSelectedKeys(e.target.value ? [e.target.value] : []);\n//                 confirm({ closeDropdown: false });\n//               }}\n//               onBlur={() => {\n//                 confirm();\n//               }}\n//             ></Input>\n//           </>\n//         );\n//       },\n//       filterIcon: () => {\n//         return <SearchOutlined />;\n//       },\n//       onFilter: (value, record) => {\n//         return record.start_date.toLowerCase().includes(value.toLowerCase());\n//       },\n//     },\n//     {\n//       title: \"End Date\",\n//       dataIndex: \"end_date\",\n//       width: 150,\n//       sorter: (a, b) => a.end_date > b.end_date,\n//       filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n//         return (\n//           <>\n//             <Input\n//               autoFocus\n//               placeholder=\"Type text here\"\n//               value={selectedKeys[0]}\n//               onChange={(e) => {\n//                 setSelectedKeys(e.target.value ? [e.target.value] : []);\n//                 confirm({ closeDropdown: false });\n//               }}\n//               onBlur={() => {\n//                 confirm();\n//               }}\n//             ></Input>\n//           </>\n//         );\n//       },\n//       filterIcon: () => {\n//         return <SearchOutlined />;\n//       },\n//       onFilter: (value, record) => {\n//         return record.end_date.toLowerCase().includes(value.toLowerCase());\n//       },\n//     },\n//   ];\n\n//   return (\n//     <>\n//       {alert}\n//       <Modal\n//         style={{ height: \"75vh\" }}\n//         isOpen={editing}\n//         toggle={() => setEditing(false)}\n//         size=\"lg\"\n//         scrollable\n//       >\n//         <div className=\"modal-header\">\n//           <h2 className=\"modal-title\" id=\"modal-title-default\">\n//             {editing ? \"Event List\" : \"\"}\n//           </h2>\n//           <button\n//             aria-label=\"Close\"\n//             className=\"close\"\n//             data-dismiss=\"modal\"\n//             type=\"button\"\n//             onClick={() => setEditing(false)}\n//           >\n//             <span aria-hidden={true}>×</span>\n//           </button>\n//         </div>\n//         <ModalBody>\n//           {/* <Label className=\"form-control-label\" htmlFor=\"example-date-input\">\n//             Search\n//           </Label>\n//           <Input\n//             className=\"form-control-alternative new-event--title\"\n//             placeholder=\"Event Title\"\n//             type=\"text\"\n//             // onChange={(e) => setEventTitle(e.target.value)}\n//             required\n//           />\n//           <Button className=\"mt-2\">Search</Button> */}\n//           <Label className=\"form-control-label\" htmlFor=\"example-date-input\">\n//             Session\n//           </Label>\n//           <Input\n//             id=\"example4cols3Input\"\n//             type=\"select\"\n//             onChange={(e) => setFilterSessionId(e.target.value)}\n//             value={filterSessionId}\n//             required\n//           >\n//             <option value=\"\" disabled selected>\n//               All\n//             </option>\n//             {sessions.map((session) => {\n//               return (\n//                 <option value={session._id} key={session._id}>\n//                   {session.name}\n//                 </option>\n//               );\n//             })}\n//           </Input>\n\n//           <Table columns={columns} dataSource={eventList} />\n//         </ModalBody>\n//       </Modal>\n//       <ToastContainer\n//         position=\"bottom-right\"\n//         autoClose={1000}\n//         hideProgressBar={false}\n//         newestOnTop={false}\n//         closeOnClick\n//         rtl={false}\n//         pauseOnFocusLoss\n//         draggable\n//         pauseOnHover\n//         theme=\"colored\"\n//       />\n//       <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n//         <Container fluid>\n//           <div className=\"header-body\">\n//             <Row className=\"align-items-center py-4\">\n//               <Col lg=\"6\">\n//                 <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\n//                   {currentDate}\n//                 </h6>\n//                 <Breadcrumb\n//                   className=\"d-none d-md-inline-block ml-lg-4\"\n//                   listClassName=\"breadcrumb-links breadcrumb-dark\"\n//                 >\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       <i className=\"fas fa-home\" />\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       Dashboard\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem aria-current=\"page\" className=\"active\">\n//                     Calendar\n//                   </BreadcrumbItem>\n//                 </Breadcrumb>\n//               </Col>\n//               <Col className=\"mt-3 mt-md-0 text-md-right\" lg=\"6\">\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => setEditing(true)}\n//                   size=\"sm\"\n//                 >\n//                   View Events\n//                 </Button>\n//                 <Button\n//                   className=\"fullcalendar-btn-prev btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.next();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-left\" />\n//                 </Button>\n//                 <Button\n//                   className=\"fullcalendar-btn-next btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.prev();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-right\" />\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicYear\"\n//                   onClick={() => changeView(\"dayGridYear\")}\n//                   size=\"sm\"\n//                 >\n//                   Year\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicMonth\"\n//                   onClick={() => changeView(\"dayGridMonth\")}\n//                   size=\"sm\"\n//                 >\n//                   Month\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicWeek\"\n//                   onClick={() => changeView(\"dayGridWeek\")}\n//                   size=\"sm\"\n//                 >\n//                   Week\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicDay\"\n//                   onClick={() => changeView(\"dayGridDay\")}\n//                   size=\"sm\"\n//                 >\n//                   Day\n//                 </Button>\n//               </Col>\n//             </Row>\n//           </div>\n//         </Container>\n//       </div>\n//       <Container className=\"mt--6 w-100\" fluid>\n//         <Row>\n//           <div className=\"col\">\n//             <Card className=\"card-calendar w-100\">\n//               <CardHeader>\n//                 <h5 className=\"h3 mb-0\">Calendar</h5>\n//               </CardHeader>\n//               <CardBody className=\"p-0\">\n//                 <div\n//                   className=\"calendar\"\n//                   data-toggle=\"calendar\"\n//                   id=\"calendar\"\n//                   ref={calendarRef}\n//                 />\n//               </CardBody>\n//             </Card>\n//             {/* {permissions && permissions.includes(\"add\") && ( */}\n//             <Modal\n//               isOpen={modalAdd}\n//               toggle={() => setModalAdd(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <form className=\"new-event--form\">\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative new-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                       required\n//                     />\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       From\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={startDate}\n//                       selectsStart\n//                       startDate={startDate}\n//                       onChange={(date) => setStartDate(date)}\n//                       strictParsing\n//                       value={startDate}\n//                       required\n//                     />\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       To\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={endDate}\n//                       selectsStart\n//                       startDate={endDate}\n//                       onChange={(date) => setEndDate(date)}\n//                       strictParsing\n//                       value={endDate}\n//                       required\n//                     />\n//                   </FormGroup>\n\n//                   <FormGroup>\n//                     <textarea\n//                       className=\"form-control-alternative new-event--title w-100 descrip\"\n//                       placeholder=\"Description\"\n//                       type=\"text\"\n//                       onChange={(e) => setDescription(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n\n//                   <FormGroup className=\"mb-0\">\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-info\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                         value=\"bg-info\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-warning\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                         value=\"bg-warning\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-danger\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                         value=\"bg-danger\"\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                 </form>\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <Button\n//                   className=\"new-event--add\"\n//                   color=\"primary\"\n//                   type=\"button\"\n//                   onClick={handleSubmitEvent}\n//                 >\n//                   Add event\n//                 </Button>\n//                 <Button\n//                   className=\"ml-auto\"\n//                   color=\"link\"\n//                   type=\"button\"\n//                   onClick={() => setModalAdd(false)}\n//                 >\n//                   Close\n//                 </Button>\n//               </div>\n//             </Modal>\n//             {/* )} */}\n\n//             {/* {permissions && permissions.includes(\"edit\") && ( */}\n//             <Modal\n//               isOpen={modalChange}\n//               toggle={() => setModalChange(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <Form className=\"edit-event--form\">\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       defaultValue={eventTitle}\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       From\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={startDate}\n//                       selectsStart\n//                       startDate={startDate}\n//                       onChange={(date) => setStartDate(date)}\n//                       strictParsing\n//                       value={startDate}\n//                       required\n//                     />\n//                     <Label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       To\n//                     </Label>\n//                     <DatePicker\n//                       className=\"p-2 endDate\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       // dateFormat=\"'YYYY-MM-dd', h:mm\"\n//                       selected={endDate}\n//                       selectsStart\n//                       startDate={endDate}\n//                       onChange={(date) => setEndDate(date)}\n//                       strictParsing\n//                       value={endDate}\n//                       required\n//                     />\n//                   </FormGroup>\n\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Description</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--description textarea-autosize\"\n//                       placeholder=\"Event Desctiption\"\n//                       type=\"textarea\"\n//                       defaultValue={description}\n//                       onChange={(e) => setDescription(e.target.value)}\n//                       required\n//                     />\n//                     <i className=\"form-group--bar\" />\n//                   </FormGroup>\n//                   <input className=\"edit-event--id\" type=\"hidden\" />\n//                   <FormGroup>\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-info\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                         value=\"bg-info\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-warning\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                         value=\"bg-warning\"\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         id=\"bg-danger\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                         value=\"vaccation\"\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                 </Form>\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <Button color=\"primary\" onClick={changeEvent}>\n//                   Update\n//                 </Button>\n//                 <Button\n//                   color=\"danger\"\n//                   onClick={() => {\n//                     setModalChange(false);\n//                     deleteEventSweetAlert();\n//                   }}\n//                 >\n//                   Delete\n//                 </Button>\n//                 <Button\n//                   className=\"ml-auto\"\n//                   color=\"link\"\n//                   onClick={() => setModalChange(false)}\n//                 >\n//                   Close\n//                 </Button>\n//               </div>\n//             </Modal>\n//             {/* )} */}\n//           </div>\n//         </Row>\n//       </Container>\n//     </>\n//   );\n// }\n\n// export default CalendarView;\n"]},"metadata":{},"sourceType":"module"}