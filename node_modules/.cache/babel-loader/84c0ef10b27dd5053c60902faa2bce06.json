{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n// /*!\n// =========================================================\n// * Argon Dashboard PRO React - v1.2.1\n// =========================================================\n// * Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n// * Coded by Creative Tim\n// =========================================================\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n// import React from \"react\";\n// // nodejs library that concatenates classes\n// import classnames from \"classnames\";\n// // JavaScript library that creates a callendar with events\n// import { Calendar } from \"@fullcalendar/core\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interaction from \"@fullcalendar/interaction\";\n// // react component used to create sweet alerts\n// import ReactBSAlert from \"react-bootstrap-sweetalert\";\n// // reactstrap components\n// import {\n//   Button,\n//   ButtonGroup,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   FormGroup,\n//   Form,\n//   Input,\n//   Modal,\n//   Container,\n//   Row,\n//   Col,\n//   Breadcrumb,\n//   BreadcrumbItem,\n// } from \"reactstrap\";\n// // core components\n// // import { events as eventsVariables } from \"variables/general.js\";\n// //React Datepicker\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import { getAllEvents } from \"api/Calendar\";\n// import { createAllEvents } from \"api/Calendar\";\n// let calendar;\n// function CalendarView() {\n//   const [startDate, setStartDate] = React.useState(new Date());\n//   const [endDate, setEndDate] = React.useState(new Date());\n//   const [events, setEvents] = React.useState([]);\n//   const [alert, setAlert] = React.useState(null);\n//   const [modalAdd, setModalAdd] = React.useState(false);\n//   const [modalChange, setModalChange] = React.useState(false);\n//   // const [startDate, setStartDate] = React.useState(null);\n//   // const [endDate, setEndDate] = React.useState(null);\n//   const [radios, setRadios] = React.useState(null);\n//   const [eventId, setEventId] = React.useState(null);\n//   const [eventTitle, setEventTitle] = React.useState(null);\n//   const [eventDescription, setEventDescription] = React.useState(null);\n//   const [description, setDescription] = React.useState(null);\n//   // eslint-disable-next-line\n//   const [event, setEvent] = React.useState(null);\n//   const [currentDate, setCurrentDate] = React.useState(null);\n//   const calendarRef = React.useRef(null);\n//   React.useEffect(() => {\n//     createCalendar();\n//     // eslint-disable-next-line\n//     getEvents();\n//   }, []);\n//   const createCalendar = () => {\n//     calendar = new Calendar(calendarRef.current, {\n//       plugins: [interaction, dayGridPlugin],\n//       initialView: \"dayGridMonth\",\n//       selectable: true,\n//       editable: true,\n//       events: events,\n//       headerToolbar: \"\",\n//       // Add new event\n//       select: (info) => {\n//         setModalAdd(true);\n//         setStartDate(startDate);\n//         setEndDate(endDate);\n//         setRadios(\"bg-info\");\n//       },\n//       // Edit calendar event action\n//       eventClick: ({ event }) => {\n//         setEventId(event.id);\n//         setEventTitle(event.title);\n//         setEventDescription(event.extendedProps.description);\n//         setRadios(\"bg-info\");\n//         setEvent(event);\n//         setModalChange(true);\n//       },\n//     });\n//     calendar.render();\n//     setCurrentDate(calendar.view.title);\n//   };\n//   const changeView = (newView) => {\n//     calendar.changeView(newView);\n//     setCurrentDate(calendar.view.title);\n//   };\n//   //Get All Events\n//   const getEvents = async () => {\n//     const allEvents = await getAllEvents();\n//     console.log(\"allEvents\", allEvents);\n//     setEvents(events);\n//     events.map((events) => {\n//       return calendar.addEvent({\n//         title: events.name,\n//         start: events.event_date,\n//         end: events.event_date,\n//         className: events.event_type,\n//         description: events.description,\n//         id: events._id,\n//         // assignTeacher: assignTeachers,\n//       });\n//     });\n//   };\n//   const addNewEvent = async (e) => {\n//     e.preventDefault();\n//     const row = {\n//       event_name: eventTitle,\n//       start_date: startDate,\n//       end_date: endDate,\n//       description: description,\n//       event_type: radios,\n//     };\n//     try {\n//       const createEvents = await createAllEvents(row);\n//       console.log(\"create\", createEvents);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//     setEvents(undefined);\n//     setStartDate(undefined);\n//     setEndDate(undefined);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     // var newEvents = events;\n//     // newEvents.push({\n//     //   title: eventTitle,\n//     //   start: startDate,\n//     //   end: endDate,\n//     //   className: radios,\n//     //   id: events[events.length - 1] + 1,\n//     // });\n//     // calendar.addEvent({\n//     //   title: eventTitle,\n//     //   start: startDate,\n//     //   end: endDate,\n//     //   className: radios,\n//     //   id: events[events.length - 1] + 1,\n//     // });\n//     // setModalAdd(false);\n//     // setEvents(newEvents);\n//     // setStartDate(undefined);\n//     // setEndDate(undefined);\n//     // setRadios(\"bg-info\");\n//     // setEventTitle(undefined);\n//   };\n//   const changeEvent = () => {\n//     var newEvents = events.map((prop, key) => {\n//       console.log(\"newEvents\", newEvents);\n//       console.log(\"propId\", prop.id);\n//       console.log(\"eventId\", eventId);\n//       if (prop.id + \"\" === eventId + \"\") {\n//         setEvent(undefined);\n//         calendar.getEventById(eventId).remove();\n//         let saveNewEvent = {\n//           ...prop,\n//           title: eventTitle,\n//           className: radios,\n//           description: eventDescription,\n//         };\n//         calendar.addEvent(saveNewEvent);\n//         return {\n//           ...prop,\n//           title: eventTitle,\n//           className: radios,\n//           description: eventDescription,\n//         };\n//       } else {\n//         return prop;\n//       }\n//     });\n//     setModalChange(false);\n//     setEvents(newEvents);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n//   const deleteEventSweetAlert = () => {\n//     setAlert(\n//       <ReactBSAlert\n//         warning\n//         style={{ display: \"block\", marginTop: \"-100px\" }}\n//         title=\"Are you sure?\"\n//         onConfirm={() => {\n//           setAlert(false);\n//           setRadios(\"bg-info\");\n//           setEventTitle(undefined);\n//           setEventDescription(undefined);\n//           setEventId(undefined);\n//         }}\n//         onCancel={() => deleteEvent()}\n//         confirmBtnCssClass=\"btn-secondary\"\n//         cancelBtnBsStyle=\"danger\"\n//         confirmBtnText=\"Cancel\"\n//         cancelBtnText=\"Yes, delete it\"\n//         showCancel\n//         btnSize=\"\"\n//       >\n//         You won't be able to revert this!\n//       </ReactBSAlert>\n//     );\n//   };\n//   const deleteEvent = () => {\n//     var newEvents = events.filter((prop) => prop.id + \"\" !== eventId);\n//     setEvent(undefined);\n//     setAlert(\n//       <ReactBSAlert\n//         success\n//         style={{ display: \"block\", marginTop: \"-100px\" }}\n//         title=\"Success\"\n//         onConfirm={() => setAlert(null)}\n//         onCancel={() => setAlert(null)}\n//         confirmBtnBsStyle=\"primary\"\n//         confirmBtnText=\"Ok\"\n//         btnSize=\"\"\n//       >\n//         A few words about this sweet alert ...\n//       </ReactBSAlert>\n//     );\n//     setModalChange(false);\n//     setEvents(newEvents);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n//   return (\n//     <>\n//       {alert}\n//       <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n//         <Container fluid>\n//           <div className=\"header-body\">\n//             <Row className=\"align-items-center py-4\">\n//               <Col lg=\"6\">\n//                 <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\n//                   {currentDate}\n//                 </h6>\n//                 <Breadcrumb\n//                   className=\"d-none d-md-inline-block ml-lg-4\"\n//                   listClassName=\"breadcrumb-links breadcrumb-dark\"\n//                 >\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       <i className=\"fas fa-home\" />\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       Dashboard\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem aria-current=\"page\" className=\"active\">\n//                     Calendar\n//                   </BreadcrumbItem>\n//                 </Breadcrumb>\n//               </Col>\n//               <Col className=\"mt-3 mt-md-0 text-md-right\" lg=\"6\">\n//                 <Button\n//                   className=\"fullcalendar-btn-prev btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.next();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-left\" />\n//                 </Button>\n//                 <Button\n//                   className=\"fullcalendar-btn-next btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.prev();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-right\" />\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"month\"\n//                   onClick={() => changeView(\"dayGridMonth\")}\n//                   size=\"sm\"\n//                 >\n//                   Month\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicWeek\"\n//                   onClick={() => changeView(\"dayGridWeek\")}\n//                   size=\"sm\"\n//                 >\n//                   Week\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicDay\"\n//                   onClick={() => changeView(\"dayGridDay\")}\n//                   size=\"sm\"\n//                 >\n//                   Day\n//                 </Button>\n//               </Col>\n//             </Row>\n//           </div>\n//         </Container>\n//       </div>\n//       <Container className=\"mt--6\" fluid>\n//         <Row>\n//           <div className=\"col\">\n//             <Card className=\"card-calendar\">\n//               <CardHeader>\n//                 <h5 className=\"h3 mb-0\">Calendar</h5>\n//               </CardHeader>\n//               <CardBody className=\"p-0\">\n//                 <div\n//                   className=\"calendar\"\n//                   data-toggle=\"calendar\"\n//                   id=\"calendar\"\n//                   ref={calendarRef}\n//                 />\n//               </CardBody>\n//             </Card>\n//             <Modal\n//               isOpen={modalAdd}\n//               toggle={() => setModalAdd(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <form className=\"new-event--form\" onSubmit={addNewEvent}>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative new-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       From\n//                     </label>\n//                     <DatePicker\n//                       className=\"p-2 w-100 border border-light\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={startDate}\n//                       selectsStart\n//                       startDate={startDate}\n//                       onChange={(date) => setStartDate(date)}\n//                       strictParsing\n//                       value={startDate}\n//                       required\n//                     />\n//                     <label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       To\n//                     </label>\n//                     <DatePicker\n//                       className=\"p-2 w-100 border border-light\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={endDate}\n//                       selectsStart\n//                       startDate={endDate}\n//                       onChange={(date) => setEndDate(date)}\n//                       strictParsing\n//                       value={endDate}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Description</label>\n//                     <textarea\n//                       className=\"form-control-alternative new-event--title w-100 descrip\"\n//                       placeholder=\"Description\"\n//                       type=\"text\"\n//                       onChange={(e) => setDescription(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup className=\"mb-0\">\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-success\", {\n//                           active: radios === \"bg-success\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-success\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-default\", {\n//                           active: radios === \"bg-default\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-default\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-primary\", {\n//                           active: radios === \"bg-primary\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-primary\")}\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                   <div className=\"modal-footer\">\n//                     <Button\n//                       className=\"new-event--add\"\n//                       color=\"primary\"\n//                       type=\"submit\"\n//                     >\n//                       Add event\n//                     </Button>\n//                     <Button\n//                       className=\"ml-auto\"\n//                       color=\"link\"\n//                       type=\"button\"\n//                       onClick={() => setModalAdd(false)}\n//                     >\n//                       Close\n//                     </Button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </Modal>\n//             <Modal\n//               isOpen={modalChange}\n//               toggle={() => setModalChange(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <Form className=\"edit-event--form\">\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       defaultValue={eventTitle}\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-success\", {\n//                           active: radios === \"bg-success\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-success\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-default\", {\n//                           active: radios === \"bg-default\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-default\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-primary\", {\n//                           active: radios === \"bg-primary\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-primary\")}\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Description</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--description textarea-autosize\"\n//                       placeholder=\"Event Desctiption\"\n//                       type=\"textarea\"\n//                       defaultValue={eventDescription}\n//                       onChange={(e) => setEventDescription(e.target.value)}\n//                     />\n//                     <i className=\"form-group--bar\" />\n//                   </FormGroup>\n//                   <input className=\"edit-event--id\" type=\"hidden\" />\n//                 </Form>\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <Button color=\"primary\" onClick={changeEvent}>\n//                   Update\n//                 </Button>\n//                 <Button\n//                   color=\"danger\"\n//                   onClick={() => {\n//                     setModalChange(false);\n//                     deleteEventSweetAlert();\n//                   }}\n//                 >\n//                   Delete\n//                 </Button>\n//                 <Button\n//                   className=\"ml-auto\"\n//                   color=\"link\"\n//                   onClick={() => setModalChange(false)}\n//                 >\n//                   Close\n//                 </Button>\n//               </div>\n//             </Modal>\n//           </div>\n//         </Row>\n//       </Container>\n//     </>\n//   );\n// }\n// export default CalendarView;\nimport React, { useEffect, useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classnames from \"classnames\"; // JavaScript library that creates a callendar with events\n\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interaction from \"@fullcalendar/interaction\"; // react component used to create sweet alerts\n// import { allSessions } from \"api/session\";\n\nimport ReactBSAlert from \"react-bootstrap-sweetalert\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, FormGroup, Form, Input, Modal, Container, Row, Col, Breadcrumb, BreadcrumbItem, Label, ModalBody } from \"reactstrap\"; // core components\n// import { events as eventsVariables } from \"variables/general.js\";\n\nimport { ToastContainer, toast } from \"react-toastify\"; //React Datepicker\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; //Authentication\n// import { isAuthenticated } from \"api/auth\";\n//Addevent and getEvent functions\n// import {\n//   addCalender,\n//   getCalender,\n//   updateEvent,\n//   deleteEvents,\n// } from \"api/calender\";\n// import \"./Calender.css\";\n//import Ant Table\n// import AntTable from \"./tables/AntTable\";\n\nimport { Table } from \"ant-table-extensions\";\nimport { SearchOutlined } from \"@ant-design/icons\"; // import { updateCalendarError } from \"constants/errors\";\n// import { deleteCalendarError, fetchingStaffFailed } from \"constants/errors\";\n// import { allStaffs } from \"api/staff\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar calendar;\n\nfunction CalendarView() {\n  _s();\n\n  var _this = this;\n\n  var _isAuthenticated = isAuthenticated(),\n      user = _isAuthenticated.user,\n      token = _isAuthenticated.token;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      events = _React$useState2[0],\n      setEvents = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      alert = _React$useState4[0],\n      setAlert = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modalAdd = _React$useState6[0],\n      setModalAdd = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      modalChange = _React$useState8[0],\n      setModalChange = _React$useState8[1];\n\n  var _React$useState9 = React.useState(new Date()),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      startDate = _React$useState10[0],\n      setStartDate = _React$useState10[1];\n\n  var _React$useState11 = React.useState(new Date()),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      endDate = _React$useState12[0],\n      setEndDate = _React$useState12[1];\n\n  var _React$useState13 = React.useState(null),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      radios = _React$useState14[0],\n      setRadios = _React$useState14[1];\n\n  var _React$useState15 = React.useState(null),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      eventId = _React$useState16[0],\n      setEventId = _React$useState16[1];\n\n  var _React$useState17 = React.useState(null),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      eventTitle = _React$useState18[0],\n      setEventTitle = _React$useState18[1];\n\n  var _React$useState19 = React.useState(null),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      eventDescription = _React$useState20[0],\n      setEventDescription = _React$useState20[1];\n\n  var _React$useState21 = React.useState(null),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      description = _React$useState22[0],\n      setDescription = _React$useState22[1];\n\n  var _React$useState23 = React.useState(null),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      assignTeachers = _React$useState24[0],\n      setAssignTeachers = _React$useState24[1]; // eslint-disable-next-line\n\n\n  var _React$useState25 = React.useState(null),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      event = _React$useState26[0],\n      setEvent = _React$useState26[1];\n\n  var _React$useState27 = React.useState(null),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      currentDate = _React$useState28[0],\n      setCurrentDate = _React$useState28[1];\n\n  var calendarRef = React.useRef(null);\n\n  var _React$useState29 = React.useState(false),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      checked = _React$useState30[0],\n      setChecked = _React$useState30[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sessions = _useState2[0],\n      setSessions = _useState2[1];\n\n  var _React$useState31 = React.useState(false),\n      _React$useState32 = _slicedToArray(_React$useState31, 2),\n      editing = _React$useState32[0],\n      setEditing = _React$useState32[1];\n\n  var _React$useState33 = React.useState([]),\n      _React$useState34 = _slicedToArray(_React$useState33, 2),\n      eventList = _React$useState34[0],\n      setEventList = _React$useState34[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectSessionId = _useState4[0],\n      setSelectSessionId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      staff = _useState6[0],\n      setStaff = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      staffId = _useState8[0],\n      setStaffId = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filterSessionId = _useState10[0],\n      setFilterSessionId = _useState10[1];\n\n  var createCalendar = function createCalendar() {\n    calendar = new Calendar(calendarRef.current, {\n      plugins: [interaction, dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      selectable: true,\n      // editable: true,\n      // events: events,\n      headerToolbar: \"\",\n      // Add new event\n      select: function select(info) {\n        console.log(\"info\", info);\n        setModalAdd(true);\n        setStartDate(startDate);\n        setEndDate(endDate);\n        setRadios(\"bg-info\");\n      },\n      // Edit calendar event action\n      eventClick: function eventClick(_ref) {\n        var event = _ref.event;\n        console.log(\"event\", event);\n        setEventId(event.id);\n        setEventTitle(event.title);\n        setDescription(event.extendedProps.description);\n        setRadios(\"exams\");\n        setEvent(event);\n        setModalChange(true);\n      }\n    });\n    calendar.render();\n    setCurrentDate(calendar.view.title);\n  };\n\n  var changeView = function changeView(newView) {\n    calendar.changeView(newView);\n    setCurrentDate(calendar.view.title);\n  };\n\n  var handleSubmitEvent = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formData = new FormData();\n              formData.set(\"name\", eventTitle);\n              formData.set(\"event_from\", new Date(startDate));\n              formData.set(\"event_to\", new Date(endDate));\n              formData.set(\"description\", description); // formData.set(\"assignTeachers\", assignTeachers)\n\n              formData.set(\"event_type\", radios);\n              formData.set(\"school\", user.school);\n              formData.set(\"assignTeachers\", JSON.stringify([staffId]));\n              formData.set(\"session\", selectSessionId); // console.log(\"str\", new Date(startDate));\n              // console.log(\"end\", new Date(endDate));\n\n              _context.prev = 9;\n              _context.next = 12;\n              return addCalender(user._id, token, formData);\n\n            case 12:\n              setModalAdd(false);\n              toast.success(\"Event addedd successfully\");\n              setChecked(true);\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](9);\n              toast.error(_context.t0);\n\n            case 20:\n              setEvents(undefined);\n              setStartDate(undefined);\n              setEndDate(undefined);\n              setRadios(\"bg-info\");\n              setEventTitle(undefined);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 17]]);\n    }));\n\n    return function handleSubmitEvent() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //Get Events\n\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            createCalendar();\n            console.log(\"getevents\", events);\n            setEvents(events);\n            events.map(function (events) {\n              return calendar.addEvent({\n                title: events.name,\n                start: events.event_from,\n                end: events.event_to,\n                className: events.event_type,\n                description: events.description,\n                id: events._id // assignTeacher: assignTeachers,\n\n              });\n            }); //Ant Table Data Source\n\n            data = [];\n            events.map(function (events) {\n              data.push({\n                key: events._id,\n                event_name: events.name,\n                start_date: events.event_from.split(\"T\")[0],\n                end_date: events.event_to.split(\"T\")[0]\n              });\n            });\n            setEventList(data);\n            setChecked(false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [checked]); //Edit Events\n\n  var changeEvent = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formData = new FormData();\n              formData.set(\"name\", eventTitle);\n              formData.set(\"event_from\", new Date(startDate));\n              formData.set(\"event_to\", new Date(endDate));\n              formData.set(\"description\", description); // formData.set(\"assignTeachers\", assignTeachers)\n\n              formData.set(\"event_type\", radios);\n              formData.set(\"school\", user.school);\n\n              try {\n                // const updateEvents = await updateEvent();\n                // setEvents(updateEvents);\n                setChecked(true);\n              } catch (err) {// toast.error(updateCalendarError);\n              }\n\n              setModalChange(false);\n              setRadios(\"bg-info\");\n              setEventTitle(undefined);\n              setEventDescription(undefined);\n              setEventId(undefined);\n              setEvent(undefined);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function changeEvent() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); //Delete Events Confirm Box\n\n\n  var deleteEventSweetAlert = function deleteEventSweetAlert() {\n    setAlert( /*#__PURE__*/_jsxDEV(ReactBSAlert, {\n      warning: true,\n      style: {\n        display: \"block\",\n        marginTop: \"-100px\"\n      },\n      title: \"Are you sure?\",\n      onConfirm: function onConfirm() {\n        setAlert(false);\n        setRadios(\"bg-info\");\n        setEventTitle(undefined);\n        setEventDescription(undefined);\n        setEventId(undefined);\n      },\n      onCancel: function onCancel() {\n        return deleteEvent();\n      },\n      confirmBtnCssClass: \"btn-secondary\",\n      cancelBtnBsStyle: \"danger\",\n      confirmBtnText: \"Cancel\",\n      cancelBtnText: \"Yes, delete it\",\n      showCancel: true,\n      btnSize: \"\",\n      children: \"You won't be able to revert this!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 7\n    }, _this));\n  }; //Delete Events\n\n\n  var deleteEvent = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _isAuthenticated2, _user, _token, deleEvents;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _isAuthenticated2 = isAuthenticated(), _user = _isAuthenticated2.user, _token = _isAuthenticated2.token;\n              _context4.next = 4;\n              return deleteEvents(eventId, _user._id, _token);\n\n            case 4:\n              deleEvents = _context4.sent;\n              setEvent(undefined);\n              setAlert( /*#__PURE__*/_jsxDEV(ReactBSAlert, {\n                success: true,\n                style: {\n                  display: \"block\",\n                  marginTop: \"-100px\"\n                },\n                title: \"Success\",\n                onConfirm: function onConfirm() {\n                  return setAlert(null);\n                },\n                onCancel: function onCancel() {\n                  return setAlert(null);\n                },\n                confirmBtnBsStyle: \"primary\",\n                confirmBtnText: \"Ok\",\n                btnSize: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 9\n              }, _this));\n              setEvents(deleEvents);\n              setChecked(true);\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              toast.error(deleteCalendarError);\n\n            case 14:\n              setModalChange(false);\n              setRadios(\"bg-info\");\n              setEventTitle(undefined);\n              setEventDescription(undefined);\n              setEventId(undefined);\n              setEvent(undefined);\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function deleteEvent() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var filteredEvents = events.filter(function (event) {\n      return event.session.toString() === filterSessionId.toString();\n    });\n    var data = [];\n    filteredEvents.map(function (events) {\n      data.push({\n        key: events._id,\n        event_name: events.name,\n        start_date: events.event_from.split(\"T\")[0],\n        end_date: events.event_to.split(\"T\")[0]\n      });\n    });\n    setEventList(data);\n    setChecked(false);\n  }, [filterSessionId]); //Ant Table Column\n\n  var columns = [{\n    title: \"Event Name\",\n    dataIndex: \"event_name\",\n    width: 150,\n    sorter: function sorter(a, b) {\n      return a.event_name > b.event_name;\n    },\n    filterDropdown: function filterDropdown(_ref6) {\n      var setSelectedKeys = _ref6.setSelectedKeys,\n          selectedKeys = _ref6.selectedKeys,\n          confirm = _ref6.confirm;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"Type text here\",\n          value: selectedKeys[0],\n          onChange: function onChange(e) {\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\n            confirm({\n              closeDropdown: false\n            });\n          },\n          onBlur: function onBlur() {\n            confirm();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false);\n    },\n    filterIcon: function filterIcon() {\n      return /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 16\n      }, _this);\n    },\n    onFilter: function onFilter(value, record) {\n      return record.event_name.toLowerCase().includes(value.toLowerCase());\n    }\n  }, {\n    title: \"Start Date\",\n    dataIndex: \"start_date\",\n    width: 150,\n    sorter: function sorter(a, b) {\n      return a.start_date > b.start_date;\n    },\n    filterDropdown: function filterDropdown(_ref7) {\n      var setSelectedKeys = _ref7.setSelectedKeys,\n          selectedKeys = _ref7.selectedKeys,\n          confirm = _ref7.confirm;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"Type text here\",\n          value: selectedKeys[0],\n          onChange: function onChange(e) {\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\n            confirm({\n              closeDropdown: false\n            });\n          },\n          onBlur: function onBlur() {\n            confirm();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false);\n    },\n    filterIcon: function filterIcon() {\n      return /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 16\n      }, _this);\n    },\n    onFilter: function onFilter(value, record) {\n      return record.start_date.toLowerCase().includes(value.toLowerCase());\n    }\n  }, {\n    title: \"End Date\",\n    dataIndex: \"end_date\",\n    width: 150,\n    sorter: function sorter(a, b) {\n      return a.end_date > b.end_date;\n    },\n    filterDropdown: function filterDropdown(_ref8) {\n      var setSelectedKeys = _ref8.setSelectedKeys,\n          selectedKeys = _ref8.selectedKeys,\n          confirm = _ref8.confirm;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"Type text here\",\n          value: selectedKeys[0],\n          onChange: function onChange(e) {\n            setSelectedKeys(e.target.value ? [e.target.value] : []);\n            confirm({\n              closeDropdown: false\n            });\n          },\n          onBlur: function onBlur() {\n            confirm();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false);\n    },\n    filterIcon: function filterIcon() {\n      return /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 16\n      }, _this);\n    },\n    onFilter: function onFilter(value, record) {\n      return record.end_date.toLowerCase().includes(value.toLowerCase());\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alert, /*#__PURE__*/_jsxDEV(Modal, {\n      style: {\n        height: \"75vh\"\n      },\n      isOpen: editing,\n      toggle: function toggle() {\n        return setEditing(false);\n      },\n      size: \"lg\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          id: \"modal-title-default\",\n          children: editing ? \"Event List\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Close\",\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          type: \"button\",\n          onClick: function onClick() {\n            return setEditing(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": true,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-control-label\",\n          htmlFor: \"example-date-input\",\n          children: \"Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"example4cols3Input\",\n          type: \"select\",\n          onChange: function onChange(e) {\n            return setFilterSessionId(e.target.value);\n          },\n          value: filterSessionId,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 13\n          }, this), sessions.map(function (session) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: session._id,\n              children: session.name\n            }, session._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 17\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: eventList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 1000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"colored\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header header-dark bg-info pb-6 content__title content__title--calendar\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-body\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center py-4\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\",\n                children: currentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n                className: \"d-none d-md-inline-block ml-lg-4\",\n                listClassName: \"breadcrumb-links breadcrumb-dark\",\n                children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#pablo\",\n                    onClick: function onClick(e) {\n                      return e.preventDefault();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-home\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1091,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1090,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1089,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#pablo\",\n                    onClick: function onClick(e) {\n                      return e.preventDefault();\n                    },\n                    children: \"Dashboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1095,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1094,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                  \"aria-current\": \"page\",\n                  className: \"active\",\n                  children: \"Calendar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"mt-3 mt-md-0 text-md-right\",\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                onClick: function onClick() {\n                  return setEditing(true);\n                },\n                size: \"sm\",\n                children: \"View Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"fullcalendar-btn-prev btn-neutral\",\n                color: \"default\",\n                onClick: function onClick() {\n                  calendar.next();\n                },\n                size: \"sm\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-angle-left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"fullcalendar-btn-next btn-neutral\",\n                color: \"default\",\n                onClick: function onClick() {\n                  calendar.prev();\n                },\n                size: \"sm\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-angle-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"basicYear\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridYear\");\n                },\n                size: \"sm\",\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"basicMonth\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridMonth\");\n                },\n                size: \"sm\",\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"basicWeek\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridWeek\");\n                },\n                size: \"sm\",\n                children: \"Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-neutral\",\n                color: \"default\",\n                \"data-calendar-view\": \"basicDay\",\n                onClick: function onClick() {\n                  return changeView(\"dayGridDay\");\n                },\n                size: \"sm\",\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt--6 w-100\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-calendar w-100\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"h3 mb-0\",\n                children: \"Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"p-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"calendar\",\n                \"data-toggle\": \"calendar\",\n                id: \"calendar\",\n                ref: calendarRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalAdd,\n            toggle: function toggle() {\n              return setModalAdd(false);\n            },\n            className: \"modal-dialog-centered modal-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"new-event--form\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Event title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1199,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control-alternative new-event--title\",\n                    placeholder: \"Event Title\",\n                    type: \"text\",\n                    onChange: function onChange(e) {\n                      return setEventTitle(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"From\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1207,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 endDate\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\",\n                    selected: startDate,\n                    selectsStart: true,\n                    startDate: startDate,\n                    onChange: function onChange(date) {\n                      return setStartDate(date);\n                    },\n                    strictParsing: true,\n                    value: startDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1213,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1225,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 endDate\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\",\n                    selected: endDate,\n                    selectsStart: true,\n                    startDate: endDate,\n                    onChange: function onChange(date) {\n                      return setEndDate(date);\n                    },\n                    strictParsing: true,\n                    value: endDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    className: \"form-control-alternative new-event--title w-100 descrip\",\n                    placeholder: \"Description\",\n                    type: \"text\",\n                    onChange: function onChange(e) {\n                      return setDescription(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1246,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label d-block mb-3\",\n                    children: \"Status color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    className: \"btn-group-toggle btn-group-colors event-tag\",\n                    \"data-toggle\": \"buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-info\", {\n                        active: radios === \"bg-info\"\n                      }),\n                      color: \"\",\n                      id: \"bg-info\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-info\");\n                      },\n                      value: \"bg-info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1263,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-warning\", {\n                        active: radios === \"bg-warning\"\n                      }),\n                      color: \"\",\n                      id: \"bg-warning\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-warning\");\n                      },\n                      value: \"bg-warning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1273,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-danger\", {\n                        active: radios === \"bg-danger\"\n                      }),\n                      color: \"\",\n                      id: \"bg-danger\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-danger\");\n                      },\n                      value: \"bg-danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1283,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"new-event--add\",\n                color: \"primary\",\n                type: \"button\",\n                onClick: handleSubmitEvent,\n                children: \"Add event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"ml-auto\",\n                color: \"link\",\n                type: \"button\",\n                onClick: function onClick() {\n                  return setModalAdd(false);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalChange,\n            toggle: function toggle() {\n              return setModalChange(false);\n            },\n            className: \"modal-dialog-centered modal-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"edit-event--form\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Event title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1327,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control-alternative edit-event--title\",\n                    placeholder: \"Event Title\",\n                    type: \"text\",\n                    defaultValue: eventTitle,\n                    onChange: function onChange(e) {\n                      return setEventTitle(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1328,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"From\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1338,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 endDate\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\",\n                    selected: startDate,\n                    selectsStart: true,\n                    startDate: startDate,\n                    onChange: function onChange(date) {\n                      return setStartDate(date);\n                    },\n                    strictParsing: true,\n                    value: startDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1344,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    className: \"form-control-label\",\n                    htmlFor: \"example-date-input\",\n                    children: \"To\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1356,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: \"p-2 endDate\",\n                    showTimeSelect: true,\n                    dateFormat: \"yyyy MMMM, dd h:mm aa\" // dateFormat=\"'YYYY-MM-dd', h:mm\"\n                    ,\n                    selected: endDate,\n                    selectsStart: true,\n                    startDate: endDate,\n                    onChange: function onChange(date) {\n                      return setEndDate(date);\n                    },\n                    strictParsing: true,\n                    value: endDate,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1362,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1337,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label\",\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1378,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"form-control-alternative edit-event--description textarea-autosize\",\n                    placeholder: \"Event Desctiption\",\n                    type: \"textarea\",\n                    defaultValue: description,\n                    onChange: function onChange(e) {\n                      return setDescription(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1379,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"form-group--bar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1387,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1377,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"edit-event--id\",\n                  type: \"hidden\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-control-label d-block mb-3\",\n                    children: \"Status color\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1391,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    className: \"btn-group-toggle btn-group-colors event-tag mb-0\",\n                    \"data-toggle\": \"buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-info\", {\n                        active: radios === \"bg-info\"\n                      }),\n                      color: \"\",\n                      id: \"bg-info\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-info\");\n                      },\n                      value: \"bg-info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1398,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-warning\", {\n                        active: radios === \"bg-warning\"\n                      }),\n                      color: \"\",\n                      id: \"bg-warning\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-warning\");\n                      },\n                      value: \"bg-warning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1408,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: classnames(\"bg-danger\", {\n                        active: radios === \"bg-danger\"\n                      }),\n                      color: \"\",\n                      id: \"bg-danger\",\n                      type: \"button\",\n                      onClick: function onClick() {\n                        return setRadios(\"bg-danger\");\n                      },\n                      value: \"vaccation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1418,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1394,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1325,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: changeEvent,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"danger\",\n                onClick: function onClick() {\n                  setModalChange(false);\n                  deleteEventSweetAlert();\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1436,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"ml-auto\",\n                color: \"link\",\n                onClick: function onClick() {\n                  return setModalChange(false);\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1445,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CalendarView, \"vw9b6vUq83MnFnT2tF6PPzd61vQ=\");\n\n_c = CalendarView;\nexport default CalendarView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/Calendar.js"],"names":["React","useEffect","useState","classnames","Calendar","dayGridPlugin","interaction","ReactBSAlert","Button","ButtonGroup","Card","CardHeader","CardBody","FormGroup","Form","Input","Modal","Container","Row","Col","Breadcrumb","BreadcrumbItem","Label","ModalBody","ToastContainer","toast","DatePicker","Table","SearchOutlined","calendar","CalendarView","isAuthenticated","user","token","events","setEvents","alert","setAlert","modalAdd","setModalAdd","modalChange","setModalChange","Date","startDate","setStartDate","endDate","setEndDate","radios","setRadios","eventId","setEventId","eventTitle","setEventTitle","eventDescription","setEventDescription","description","setDescription","assignTeachers","setAssignTeachers","event","setEvent","currentDate","setCurrentDate","calendarRef","useRef","checked","setChecked","sessions","setSessions","editing","setEditing","eventList","setEventList","selectSessionId","setSelectSessionId","staff","setStaff","staffId","setStaffId","filterSessionId","setFilterSessionId","createCalendar","current","plugins","initialView","selectable","headerToolbar","select","info","console","log","eventClick","id","title","extendedProps","render","view","changeView","newView","handleSubmitEvent","formData","FormData","set","school","JSON","stringify","addCalender","_id","success","error","undefined","map","addEvent","name","start","event_from","end","event_to","className","event_type","data","push","key","event_name","start_date","split","end_date","changeEvent","err","deleteEventSweetAlert","display","marginTop","deleteEvent","deleteEvents","deleEvents","deleteCalendarError","filteredEvents","filter","session","toString","columns","dataIndex","width","sorter","a","b","filterDropdown","setSelectedKeys","selectedKeys","confirm","e","target","value","closeDropdown","filterIcon","onFilter","record","toLowerCase","includes","height","preventDefault","next","prev","date","active"],"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","sourcesContent":["// /*!\n\n// =========================================================\n// * Argon Dashboard PRO React - v1.2.1\n// =========================================================\n\n// * Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\n// * Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n// * Coded by Creative Tim\n\n// =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// */\n// import React from \"react\";\n// // nodejs library that concatenates classes\n// import classnames from \"classnames\";\n// // JavaScript library that creates a callendar with events\n// import { Calendar } from \"@fullcalendar/core\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interaction from \"@fullcalendar/interaction\";\n// // react component used to create sweet alerts\n// import ReactBSAlert from \"react-bootstrap-sweetalert\";\n// // reactstrap components\n// import {\n//   Button,\n//   ButtonGroup,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   FormGroup,\n//   Form,\n//   Input,\n//   Modal,\n//   Container,\n//   Row,\n//   Col,\n//   Breadcrumb,\n//   BreadcrumbItem,\n// } from \"reactstrap\";\n// // core components\n\n// // import { events as eventsVariables } from \"variables/general.js\";\n\n// //React Datepicker\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import { getAllEvents } from \"api/Calendar\";\n// import { createAllEvents } from \"api/Calendar\";\n\n// let calendar;\n\n// function CalendarView() {\n//   const [startDate, setStartDate] = React.useState(new Date());\n//   const [endDate, setEndDate] = React.useState(new Date());\n//   const [events, setEvents] = React.useState([]);\n//   const [alert, setAlert] = React.useState(null);\n//   const [modalAdd, setModalAdd] = React.useState(false);\n//   const [modalChange, setModalChange] = React.useState(false);\n//   // const [startDate, setStartDate] = React.useState(null);\n//   // const [endDate, setEndDate] = React.useState(null);\n//   const [radios, setRadios] = React.useState(null);\n//   const [eventId, setEventId] = React.useState(null);\n//   const [eventTitle, setEventTitle] = React.useState(null);\n//   const [eventDescription, setEventDescription] = React.useState(null);\n//   const [description, setDescription] = React.useState(null);\n//   // eslint-disable-next-line\n//   const [event, setEvent] = React.useState(null);\n//   const [currentDate, setCurrentDate] = React.useState(null);\n//   const calendarRef = React.useRef(null);\n//   React.useEffect(() => {\n//     createCalendar();\n//     // eslint-disable-next-line\n//     getEvents();\n//   }, []);\n\n//   const createCalendar = () => {\n//     calendar = new Calendar(calendarRef.current, {\n//       plugins: [interaction, dayGridPlugin],\n//       initialView: \"dayGridMonth\",\n//       selectable: true,\n//       editable: true,\n//       events: events,\n//       headerToolbar: \"\",\n//       // Add new event\n//       select: (info) => {\n//         setModalAdd(true);\n//         setStartDate(startDate);\n//         setEndDate(endDate);\n//         setRadios(\"bg-info\");\n//       },\n//       // Edit calendar event action\n//       eventClick: ({ event }) => {\n//         setEventId(event.id);\n//         setEventTitle(event.title);\n//         setEventDescription(event.extendedProps.description);\n//         setRadios(\"bg-info\");\n//         setEvent(event);\n//         setModalChange(true);\n//       },\n//     });\n//     calendar.render();\n//     setCurrentDate(calendar.view.title);\n//   };\n//   const changeView = (newView) => {\n//     calendar.changeView(newView);\n//     setCurrentDate(calendar.view.title);\n//   };\n\n//   //Get All Events\n//   const getEvents = async () => {\n//     const allEvents = await getAllEvents();\n//     console.log(\"allEvents\", allEvents);\n//     setEvents(events);\n//     events.map((events) => {\n//       return calendar.addEvent({\n//         title: events.name,\n//         start: events.event_date,\n//         end: events.event_date,\n//         className: events.event_type,\n//         description: events.description,\n//         id: events._id,\n//         // assignTeacher: assignTeachers,\n//       });\n//     });\n//   };\n\n//   const addNewEvent = async (e) => {\n//     e.preventDefault();\n\n//     const row = {\n//       event_name: eventTitle,\n//       start_date: startDate,\n//       end_date: endDate,\n//       description: description,\n//       event_type: radios,\n//     };\n\n//     try {\n//       const createEvents = await createAllEvents(row);\n//       console.log(\"create\", createEvents);\n//     } catch (err) {\n//       console.log(err);\n//     }\n//     setEvents(undefined);\n//     setStartDate(undefined);\n//     setEndDate(undefined);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     // var newEvents = events;\n//     // newEvents.push({\n//     //   title: eventTitle,\n//     //   start: startDate,\n//     //   end: endDate,\n//     //   className: radios,\n//     //   id: events[events.length - 1] + 1,\n//     // });\n//     // calendar.addEvent({\n//     //   title: eventTitle,\n//     //   start: startDate,\n//     //   end: endDate,\n//     //   className: radios,\n//     //   id: events[events.length - 1] + 1,\n//     // });\n//     // setModalAdd(false);\n//     // setEvents(newEvents);\n//     // setStartDate(undefined);\n//     // setEndDate(undefined);\n//     // setRadios(\"bg-info\");\n//     // setEventTitle(undefined);\n//   };\n//   const changeEvent = () => {\n//     var newEvents = events.map((prop, key) => {\n//       console.log(\"newEvents\", newEvents);\n//       console.log(\"propId\", prop.id);\n//       console.log(\"eventId\", eventId);\n//       if (prop.id + \"\" === eventId + \"\") {\n//         setEvent(undefined);\n//         calendar.getEventById(eventId).remove();\n//         let saveNewEvent = {\n//           ...prop,\n//           title: eventTitle,\n//           className: radios,\n//           description: eventDescription,\n//         };\n//         calendar.addEvent(saveNewEvent);\n//         return {\n//           ...prop,\n//           title: eventTitle,\n//           className: radios,\n//           description: eventDescription,\n//         };\n//       } else {\n//         return prop;\n//       }\n//     });\n//     setModalChange(false);\n//     setEvents(newEvents);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n//   const deleteEventSweetAlert = () => {\n//     setAlert(\n//       <ReactBSAlert\n//         warning\n//         style={{ display: \"block\", marginTop: \"-100px\" }}\n//         title=\"Are you sure?\"\n//         onConfirm={() => {\n//           setAlert(false);\n//           setRadios(\"bg-info\");\n//           setEventTitle(undefined);\n//           setEventDescription(undefined);\n//           setEventId(undefined);\n//         }}\n//         onCancel={() => deleteEvent()}\n//         confirmBtnCssClass=\"btn-secondary\"\n//         cancelBtnBsStyle=\"danger\"\n//         confirmBtnText=\"Cancel\"\n//         cancelBtnText=\"Yes, delete it\"\n//         showCancel\n//         btnSize=\"\"\n//       >\n//         You won't be able to revert this!\n//       </ReactBSAlert>\n//     );\n//   };\n//   const deleteEvent = () => {\n//     var newEvents = events.filter((prop) => prop.id + \"\" !== eventId);\n//     setEvent(undefined);\n//     setAlert(\n//       <ReactBSAlert\n//         success\n//         style={{ display: \"block\", marginTop: \"-100px\" }}\n//         title=\"Success\"\n//         onConfirm={() => setAlert(null)}\n//         onCancel={() => setAlert(null)}\n//         confirmBtnBsStyle=\"primary\"\n//         confirmBtnText=\"Ok\"\n//         btnSize=\"\"\n//       >\n//         A few words about this sweet alert ...\n//       </ReactBSAlert>\n//     );\n//     setModalChange(false);\n//     setEvents(newEvents);\n//     setRadios(\"bg-info\");\n//     setEventTitle(undefined);\n//     setEventDescription(undefined);\n//     setEventId(undefined);\n//     setEvent(undefined);\n//   };\n\n//   return (\n//     <>\n//       {alert}\n//       <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n//         <Container fluid>\n//           <div className=\"header-body\">\n//             <Row className=\"align-items-center py-4\">\n//               <Col lg=\"6\">\n//                 <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\n//                   {currentDate}\n//                 </h6>\n//                 <Breadcrumb\n//                   className=\"d-none d-md-inline-block ml-lg-4\"\n//                   listClassName=\"breadcrumb-links breadcrumb-dark\"\n//                 >\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       <i className=\"fas fa-home\" />\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem>\n//                     <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n//                       Dashboard\n//                     </a>\n//                   </BreadcrumbItem>\n//                   <BreadcrumbItem aria-current=\"page\" className=\"active\">\n//                     Calendar\n//                   </BreadcrumbItem>\n//                 </Breadcrumb>\n//               </Col>\n//               <Col className=\"mt-3 mt-md-0 text-md-right\" lg=\"6\">\n//                 <Button\n//                   className=\"fullcalendar-btn-prev btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.next();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-left\" />\n//                 </Button>\n//                 <Button\n//                   className=\"fullcalendar-btn-next btn-neutral\"\n//                   color=\"default\"\n//                   onClick={() => {\n//                     calendar.prev();\n//                   }}\n//                   size=\"sm\"\n//                 >\n//                   <i className=\"fas fa-angle-right\" />\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"month\"\n//                   onClick={() => changeView(\"dayGridMonth\")}\n//                   size=\"sm\"\n//                 >\n//                   Month\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicWeek\"\n//                   onClick={() => changeView(\"dayGridWeek\")}\n//                   size=\"sm\"\n//                 >\n//                   Week\n//                 </Button>\n//                 <Button\n//                   className=\"btn-neutral\"\n//                   color=\"default\"\n//                   data-calendar-view=\"basicDay\"\n//                   onClick={() => changeView(\"dayGridDay\")}\n//                   size=\"sm\"\n//                 >\n//                   Day\n//                 </Button>\n//               </Col>\n//             </Row>\n//           </div>\n//         </Container>\n//       </div>\n//       <Container className=\"mt--6\" fluid>\n//         <Row>\n//           <div className=\"col\">\n//             <Card className=\"card-calendar\">\n//               <CardHeader>\n//                 <h5 className=\"h3 mb-0\">Calendar</h5>\n//               </CardHeader>\n//               <CardBody className=\"p-0\">\n//                 <div\n//                   className=\"calendar\"\n//                   data-toggle=\"calendar\"\n//                   id=\"calendar\"\n//                   ref={calendarRef}\n//                 />\n//               </CardBody>\n//             </Card>\n//             <Modal\n//               isOpen={modalAdd}\n//               toggle={() => setModalAdd(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <form className=\"new-event--form\" onSubmit={addNewEvent}>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative new-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       From\n//                     </label>\n//                     <DatePicker\n//                       className=\"p-2 w-100 border border-light\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={startDate}\n//                       selectsStart\n//                       startDate={startDate}\n//                       onChange={(date) => setStartDate(date)}\n//                       strictParsing\n//                       value={startDate}\n//                       required\n//                     />\n//                     <label\n//                       className=\"form-control-label\"\n//                       htmlFor=\"example-date-input\"\n//                     >\n//                       To\n//                     </label>\n//                     <DatePicker\n//                       className=\"p-2 w-100 border border-light\"\n//                       showTimeSelect\n//                       dateFormat=\"yyyy MMMM, dd h:mm aa\"\n//                       selected={endDate}\n//                       selectsStart\n//                       startDate={endDate}\n//                       onChange={(date) => setEndDate(date)}\n//                       strictParsing\n//                       value={endDate}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Description</label>\n//                     <textarea\n//                       className=\"form-control-alternative new-event--title w-100 descrip\"\n//                       placeholder=\"Description\"\n//                       type=\"text\"\n//                       onChange={(e) => setDescription(e.target.value)}\n//                       required\n//                     />\n//                   </FormGroup>\n//                   <FormGroup className=\"mb-0\">\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-success\", {\n//                           active: radios === \"bg-success\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-success\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-default\", {\n//                           active: radios === \"bg-default\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-default\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-primary\", {\n//                           active: radios === \"bg-primary\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-primary\")}\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                   <div className=\"modal-footer\">\n//                     <Button\n//                       className=\"new-event--add\"\n//                       color=\"primary\"\n//                       type=\"submit\"\n//                     >\n//                       Add event\n//                     </Button>\n//                     <Button\n//                       className=\"ml-auto\"\n//                       color=\"link\"\n//                       type=\"button\"\n//                       onClick={() => setModalAdd(false)}\n//                     >\n//                       Close\n//                     </Button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </Modal>\n//             <Modal\n//               isOpen={modalChange}\n//               toggle={() => setModalChange(false)}\n//               className=\"modal-dialog-centered modal-secondary\"\n//             >\n//               <div className=\"modal-body\">\n//                 <Form className=\"edit-event--form\">\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Event title</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--title\"\n//                       placeholder=\"Event Title\"\n//                       type=\"text\"\n//                       defaultValue={eventTitle}\n//                       onChange={(e) => setEventTitle(e.target.value)}\n//                     />\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label d-block mb-3\">\n//                       Status color\n//                     </label>\n//                     <ButtonGroup\n//                       className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\n//                       data-toggle=\"buttons\"\n//                     >\n//                       <Button\n//                         className={classnames(\"bg-info\", {\n//                           active: radios === \"bg-info\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-info\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-warning\", {\n//                           active: radios === \"bg-warning\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-warning\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-danger\", {\n//                           active: radios === \"bg-danger\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-danger\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-success\", {\n//                           active: radios === \"bg-success\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-success\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-default\", {\n//                           active: radios === \"bg-default\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-default\")}\n//                       />\n//                       <Button\n//                         className={classnames(\"bg-primary\", {\n//                           active: radios === \"bg-primary\",\n//                         })}\n//                         color=\"\"\n//                         type=\"button\"\n//                         onClick={() => setRadios(\"bg-primary\")}\n//                       />\n//                     </ButtonGroup>\n//                   </FormGroup>\n//                   <FormGroup>\n//                     <label className=\"form-control-label\">Description</label>\n//                     <Input\n//                       className=\"form-control-alternative edit-event--description textarea-autosize\"\n//                       placeholder=\"Event Desctiption\"\n//                       type=\"textarea\"\n//                       defaultValue={eventDescription}\n//                       onChange={(e) => setEventDescription(e.target.value)}\n//                     />\n//                     <i className=\"form-group--bar\" />\n//                   </FormGroup>\n//                   <input className=\"edit-event--id\" type=\"hidden\" />\n//                 </Form>\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <Button color=\"primary\" onClick={changeEvent}>\n//                   Update\n//                 </Button>\n//                 <Button\n//                   color=\"danger\"\n//                   onClick={() => {\n//                     setModalChange(false);\n//                     deleteEventSweetAlert();\n//                   }}\n//                 >\n//                   Delete\n//                 </Button>\n//                 <Button\n//                   className=\"ml-auto\"\n//                   color=\"link\"\n//                   onClick={() => setModalChange(false)}\n//                 >\n//                   Close\n//                 </Button>\n//               </div>\n//             </Modal>\n//           </div>\n//         </Row>\n//       </Container>\n//     </>\n//   );\n// }\n\n// export default CalendarView;\n\nimport React, { useEffect, useState } from \"react\";\n// nodejs library that concatenates classes\nimport classnames from \"classnames\";\n// JavaScript library that creates a callendar with events\nimport { Calendar } from \"@fullcalendar/core\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interaction from \"@fullcalendar/interaction\";\n// react component used to create sweet alerts\n// import { allSessions } from \"api/session\";\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Modal,\n  Container,\n  Row,\n  Col,\n  Breadcrumb,\n  BreadcrumbItem,\n  Label,\n  ModalBody,\n} from \"reactstrap\";\n// core components\n\n// import { events as eventsVariables } from \"variables/general.js\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\n\n//React Datepicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n//Authentication\n// import { isAuthenticated } from \"api/auth\";\n\n//Addevent and getEvent functions\n// import {\n//   addCalender,\n//   getCalender,\n//   updateEvent,\n//   deleteEvents,\n// } from \"api/calender\";\n\n// import \"./Calender.css\";\n\n//import Ant Table\n// import AntTable from \"./tables/AntTable\";\nimport { Table } from \"ant-table-extensions\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n// import { updateCalendarError } from \"constants/errors\";\n// import { deleteCalendarError, fetchingStaffFailed } from \"constants/errors\";\n\n// import { allStaffs } from \"api/staff\";\nlet calendar;\n\nfunction CalendarView() {\n  const { user, token } = isAuthenticated();\n  const [events, setEvents] = React.useState([]);\n  const [alert, setAlert] = React.useState(null);\n  const [modalAdd, setModalAdd] = React.useState(false);\n  const [modalChange, setModalChange] = React.useState(false);\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const [radios, setRadios] = React.useState(null);\n  const [eventId, setEventId] = React.useState(null);\n  const [eventTitle, setEventTitle] = React.useState(null);\n  const [eventDescription, setEventDescription] = React.useState(null);\n  const [description, setDescription] = React.useState(null);\n  const [assignTeachers, setAssignTeachers] = React.useState(null);\n  // eslint-disable-next-line\n  const [event, setEvent] = React.useState(null);\n  const [currentDate, setCurrentDate] = React.useState(null);\n  const calendarRef = React.useRef(null);\n  const [checked, setChecked] = React.useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [editing, setEditing] = React.useState(false);\n  const [eventList, setEventList] = React.useState([]);\n  const [selectSessionId, setSelectSessionId] = useState(\"\");\n  const [staff, setStaff] = useState([]);\n  const [staffId, setStaffId] = useState(\"\");\n  const [filterSessionId, setFilterSessionId] = useState(\"\");\n\n  const createCalendar = () => {\n    calendar = new Calendar(calendarRef.current, {\n      plugins: [interaction, dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      selectable: true,\n      // editable: true,\n      // events: events,\n      headerToolbar: \"\",\n\n      // Add new event\n      select: (info) => {\n        console.log(\"info\", info);\n\n        setModalAdd(true);\n        setStartDate(startDate);\n        setEndDate(endDate);\n        setRadios(\"bg-info\");\n      },\n\n      // Edit calendar event action\n      eventClick: ({ event }) => {\n        console.log(\"event\", event);\n        setEventId(event.id);\n        setEventTitle(event.title);\n        setDescription(event.extendedProps.description);\n        setRadios(\"exams\");\n        setEvent(event);\n        setModalChange(true);\n      },\n    });\n    calendar.render();\n    setCurrentDate(calendar.view.title);\n  };\n\n  const changeView = (newView) => {\n    calendar.changeView(newView);\n    setCurrentDate(calendar.view.title);\n  };\n\n  const handleSubmitEvent = async () => {\n    var formData = new FormData();\n    formData.set(\"name\", eventTitle);\n    formData.set(\"event_from\", new Date(startDate));\n    formData.set(\"event_to\", new Date(endDate));\n    formData.set(\"description\", description);\n    // formData.set(\"assignTeachers\", assignTeachers)\n    formData.set(\"event_type\", radios);\n    formData.set(\"school\", user.school);\n    formData.set(\"assignTeachers\", JSON.stringify([staffId]));\n    formData.set(\"session\", selectSessionId);\n\n    // console.log(\"str\", new Date(startDate));\n    // console.log(\"end\", new Date(endDate));\n    try {\n      await addCalender(user._id, token, formData);\n      setModalAdd(false);\n      toast.success(\"Event addedd successfully\");\n      setChecked(true);\n    } catch (err) {\n      toast.error(err);\n    }\n    setEvents(undefined);\n    setStartDate(undefined);\n    setEndDate(undefined);\n    setRadios(\"bg-info\");\n    setEventTitle(undefined);\n  };\n\n  //Get Events\n  useEffect(async () => {\n    createCalendar();\n\n    console.log(\"getevents\", events);\n    setEvents(events);\n    events.map((events) => {\n      return calendar.addEvent({\n        title: events.name,\n        start: events.event_from,\n        end: events.event_to,\n        className: events.event_type,\n        description: events.description,\n        id: events._id,\n        // assignTeacher: assignTeachers,\n      });\n    });\n\n    //Ant Table Data Source\n    const data = [];\n    events.map((events) => {\n      data.push({\n        key: events._id,\n        event_name: events.name,\n        start_date: events.event_from.split(\"T\")[0],\n        end_date: events.event_to.split(\"T\")[0],\n      });\n    });\n    setEventList(data);\n    setChecked(false);\n  }, [checked]);\n\n  //Edit Events\n  const changeEvent = async () => {\n    var formData = new FormData();\n    formData.set(\"name\", eventTitle);\n    formData.set(\"event_from\", new Date(startDate));\n    formData.set(\"event_to\", new Date(endDate));\n    formData.set(\"description\", description);\n    // formData.set(\"assignTeachers\", assignTeachers)\n    formData.set(\"event_type\", radios);\n    formData.set(\"school\", user.school);\n\n    try {\n      // const updateEvents = await updateEvent();\n      // setEvents(updateEvents);\n      setChecked(true);\n    } catch (err) {\n      // toast.error(updateCalendarError);\n    }\n    setModalChange(false);\n    setRadios(\"bg-info\");\n    setEventTitle(undefined);\n    setEventDescription(undefined);\n    setEventId(undefined);\n    setEvent(undefined);\n  };\n\n  //Delete Events Confirm Box\n  const deleteEventSweetAlert = () => {\n    setAlert(\n      <ReactBSAlert\n        warning\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Are you sure?\"\n        onConfirm={() => {\n          setAlert(false);\n          setRadios(\"bg-info\");\n          setEventTitle(undefined);\n          setEventDescription(undefined);\n          setEventId(undefined);\n        }}\n        onCancel={() => deleteEvent()}\n        confirmBtnCssClass=\"btn-secondary\"\n        cancelBtnBsStyle=\"danger\"\n        confirmBtnText=\"Cancel\"\n        cancelBtnText=\"Yes, delete it\"\n        showCancel\n        btnSize=\"\"\n      >\n        You won't be able to revert this!\n      </ReactBSAlert>\n    );\n  };\n\n  //Delete Events\n  const deleteEvent = async () => {\n    try {\n      const { user, token } = isAuthenticated();\n      const deleEvents = await deleteEvents(eventId, user._id, token);\n      setEvent(undefined);\n      setAlert(\n        <ReactBSAlert\n          success\n          style={{ display: \"block\", marginTop: \"-100px\" }}\n          title=\"Success\"\n          onConfirm={() => setAlert(null)}\n          onCancel={() => setAlert(null)}\n          confirmBtnBsStyle=\"primary\"\n          confirmBtnText=\"Ok\"\n          btnSize=\"\"\n        ></ReactBSAlert>\n      );\n      setEvents(deleEvents);\n      setChecked(true);\n    } catch (err) {\n      toast.error(deleteCalendarError);\n    }\n    setModalChange(false);\n    setRadios(\"bg-info\");\n    setEventTitle(undefined);\n    setEventDescription(undefined);\n    setEventId(undefined);\n    setEvent(undefined);\n  };\n\n  useEffect(() => {\n    let filteredEvents = events.filter(\n      (event) => event.session.toString() === filterSessionId.toString()\n    );\n    const data = [];\n    filteredEvents.map((events) => {\n      data.push({\n        key: events._id,\n        event_name: events.name,\n        start_date: events.event_from.split(\"T\")[0],\n        end_date: events.event_to.split(\"T\")[0],\n      });\n    });\n    setEventList(data);\n    setChecked(false);\n  }, [filterSessionId]);\n\n  //Ant Table Column\n  const columns = [\n    {\n      title: \"Event Name\",\n      dataIndex: \"event_name\",\n      width: 150,\n      sorter: (a, b) => a.event_name > b.event_name,\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n        return (\n          <>\n            <Input\n              autoFocus\n              placeholder=\"Type text here\"\n              value={selectedKeys[0]}\n              onChange={(e) => {\n                setSelectedKeys(e.target.value ? [e.target.value] : []);\n                confirm({ closeDropdown: false });\n              }}\n              onBlur={() => {\n                confirm();\n              }}\n            ></Input>\n          </>\n        );\n      },\n      filterIcon: () => {\n        return <SearchOutlined />;\n      },\n      onFilter: (value, record) => {\n        return record.event_name.toLowerCase().includes(value.toLowerCase());\n      },\n    },\n    {\n      title: \"Start Date\",\n      dataIndex: \"start_date\",\n      width: 150,\n      sorter: (a, b) => a.start_date > b.start_date,\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n        return (\n          <>\n            <Input\n              autoFocus\n              placeholder=\"Type text here\"\n              value={selectedKeys[0]}\n              onChange={(e) => {\n                setSelectedKeys(e.target.value ? [e.target.value] : []);\n                confirm({ closeDropdown: false });\n              }}\n              onBlur={() => {\n                confirm();\n              }}\n            ></Input>\n          </>\n        );\n      },\n      filterIcon: () => {\n        return <SearchOutlined />;\n      },\n      onFilter: (value, record) => {\n        return record.start_date.toLowerCase().includes(value.toLowerCase());\n      },\n    },\n    {\n      title: \"End Date\",\n      dataIndex: \"end_date\",\n      width: 150,\n      sorter: (a, b) => a.end_date > b.end_date,\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\n        return (\n          <>\n            <Input\n              autoFocus\n              placeholder=\"Type text here\"\n              value={selectedKeys[0]}\n              onChange={(e) => {\n                setSelectedKeys(e.target.value ? [e.target.value] : []);\n                confirm({ closeDropdown: false });\n              }}\n              onBlur={() => {\n                confirm();\n              }}\n            ></Input>\n          </>\n        );\n      },\n      filterIcon: () => {\n        return <SearchOutlined />;\n      },\n      onFilter: (value, record) => {\n        return record.end_date.toLowerCase().includes(value.toLowerCase());\n      },\n    },\n  ];\n\n  return (\n    <>\n      {alert}\n      <Modal\n        style={{ height: \"75vh\" }}\n        isOpen={editing}\n        toggle={() => setEditing(false)}\n        size=\"lg\"\n        scrollable\n      >\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\" id=\"modal-title-default\">\n            {editing ? \"Event List\" : \"\"}\n          </h2>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setEditing(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <ModalBody>\n          {/* <Label className=\"form-control-label\" htmlFor=\"example-date-input\">\n            Search\n          </Label>\n          <Input\n            className=\"form-control-alternative new-event--title\"\n            placeholder=\"Event Title\"\n            type=\"text\"\n            // onChange={(e) => setEventTitle(e.target.value)}\n            required\n          />\n          <Button className=\"mt-2\">Search</Button> */}\n          <Label className=\"form-control-label\" htmlFor=\"example-date-input\">\n            Session\n          </Label>\n          <Input\n            id=\"example4cols3Input\"\n            type=\"select\"\n            onChange={(e) => setFilterSessionId(e.target.value)}\n            value={filterSessionId}\n            required\n          >\n            <option value=\"\" disabled selected>\n              All\n            </option>\n            {sessions.map((session) => {\n              return (\n                <option value={session._id} key={session._id}>\n                  {session.name}\n                </option>\n              );\n            })}\n          </Input>\n\n          <Table columns={columns} dataSource={eventList} />\n        </ModalBody>\n      </Modal>\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={1000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n      <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\n        <Container fluid>\n          <div className=\"header-body\">\n            <Row className=\"align-items-center py-4\">\n              <Col lg=\"6\">\n                <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\n                  {currentDate}\n                </h6>\n                <Breadcrumb\n                  className=\"d-none d-md-inline-block ml-lg-4\"\n                  listClassName=\"breadcrumb-links breadcrumb-dark\"\n                >\n                  <BreadcrumbItem>\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <i className=\"fas fa-home\" />\n                    </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem>\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      Dashboard\n                    </a>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem aria-current=\"page\" className=\"active\">\n                    Calendar\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </Col>\n              <Col className=\"mt-3 mt-md-0 text-md-right\" lg=\"6\">\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  onClick={() => setEditing(true)}\n                  size=\"sm\"\n                >\n                  View Events\n                </Button>\n                <Button\n                  className=\"fullcalendar-btn-prev btn-neutral\"\n                  color=\"default\"\n                  onClick={() => {\n                    calendar.next();\n                  }}\n                  size=\"sm\"\n                >\n                  <i className=\"fas fa-angle-left\" />\n                </Button>\n                <Button\n                  className=\"fullcalendar-btn-next btn-neutral\"\n                  color=\"default\"\n                  onClick={() => {\n                    calendar.prev();\n                  }}\n                  size=\"sm\"\n                >\n                  <i className=\"fas fa-angle-right\" />\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"basicYear\"\n                  onClick={() => changeView(\"dayGridYear\")}\n                  size=\"sm\"\n                >\n                  Year\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"basicMonth\"\n                  onClick={() => changeView(\"dayGridMonth\")}\n                  size=\"sm\"\n                >\n                  Month\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"basicWeek\"\n                  onClick={() => changeView(\"dayGridWeek\")}\n                  size=\"sm\"\n                >\n                  Week\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"default\"\n                  data-calendar-view=\"basicDay\"\n                  onClick={() => changeView(\"dayGridDay\")}\n                  size=\"sm\"\n                >\n                  Day\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n      <Container className=\"mt--6 w-100\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"card-calendar w-100\">\n              <CardHeader>\n                <h5 className=\"h3 mb-0\">Calendar</h5>\n              </CardHeader>\n              <CardBody className=\"p-0\">\n                <div\n                  className=\"calendar\"\n                  data-toggle=\"calendar\"\n                  id=\"calendar\"\n                  ref={calendarRef}\n                />\n              </CardBody>\n            </Card>\n            {/* {permissions && permissions.includes(\"add\") && ( */}\n            <Modal\n              isOpen={modalAdd}\n              toggle={() => setModalAdd(false)}\n              className=\"modal-dialog-centered modal-secondary\"\n            >\n              <div className=\"modal-body\">\n                <form className=\"new-event--form\">\n                  <FormGroup>\n                    <label className=\"form-control-label\">Event title</label>\n                    <Input\n                      className=\"form-control-alternative new-event--title\"\n                      placeholder=\"Event Title\"\n                      type=\"text\"\n                      onChange={(e) => setEventTitle(e.target.value)}\n                      required\n                    />\n                    <Label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      From\n                    </Label>\n                    <DatePicker\n                      className=\"p-2 endDate\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      selected={startDate}\n                      selectsStart\n                      startDate={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      strictParsing\n                      value={startDate}\n                      required\n                    />\n                    <Label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      To\n                    </Label>\n                    <DatePicker\n                      className=\"p-2 endDate\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      selected={endDate}\n                      selectsStart\n                      startDate={endDate}\n                      onChange={(date) => setEndDate(date)}\n                      strictParsing\n                      value={endDate}\n                      required\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <textarea\n                      className=\"form-control-alternative new-event--title w-100 descrip\"\n                      placeholder=\"Description\"\n                      type=\"text\"\n                      onChange={(e) => setDescription(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n\n                  <FormGroup className=\"mb-0\">\n                    <label className=\"form-control-label d-block mb-3\">\n                      Status color\n                    </label>\n                    <ButtonGroup\n                      className=\"btn-group-toggle btn-group-colors event-tag\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        className={classnames(\"bg-info\", {\n                          active: radios === \"bg-info\",\n                        })}\n                        color=\"\"\n                        id=\"bg-info\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-info\")}\n                        value=\"bg-info\"\n                      />\n                      <Button\n                        className={classnames(\"bg-warning\", {\n                          active: radios === \"bg-warning\",\n                        })}\n                        color=\"\"\n                        id=\"bg-warning\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-warning\")}\n                        value=\"bg-warning\"\n                      />\n                      <Button\n                        className={classnames(\"bg-danger\", {\n                          active: radios === \"bg-danger\",\n                        })}\n                        color=\"\"\n                        id=\"bg-danger\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-danger\")}\n                        value=\"bg-danger\"\n                      />\n                    </ButtonGroup>\n                  </FormGroup>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <Button\n                  className=\"new-event--add\"\n                  color=\"primary\"\n                  type=\"button\"\n                  onClick={handleSubmitEvent}\n                >\n                  Add event\n                </Button>\n                <Button\n                  className=\"ml-auto\"\n                  color=\"link\"\n                  type=\"button\"\n                  onClick={() => setModalAdd(false)}\n                >\n                  Close\n                </Button>\n              </div>\n            </Modal>\n            {/* )} */}\n\n            {/* {permissions && permissions.includes(\"edit\") && ( */}\n            <Modal\n              isOpen={modalChange}\n              toggle={() => setModalChange(false)}\n              className=\"modal-dialog-centered modal-secondary\"\n            >\n              <div className=\"modal-body\">\n                <Form className=\"edit-event--form\">\n                  <FormGroup>\n                    <label className=\"form-control-label\">Event title</label>\n                    <Input\n                      className=\"form-control-alternative edit-event--title\"\n                      placeholder=\"Event Title\"\n                      type=\"text\"\n                      defaultValue={eventTitle}\n                      onChange={(e) => setEventTitle(e.target.value)}\n                      required\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      From\n                    </Label>\n                    <DatePicker\n                      className=\"p-2 endDate\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      selected={startDate}\n                      selectsStart\n                      startDate={startDate}\n                      onChange={(date) => setStartDate(date)}\n                      strictParsing\n                      value={startDate}\n                      required\n                    />\n                    <Label\n                      className=\"form-control-label\"\n                      htmlFor=\"example-date-input\"\n                    >\n                      To\n                    </Label>\n                    <DatePicker\n                      className=\"p-2 endDate\"\n                      showTimeSelect\n                      dateFormat=\"yyyy MMMM, dd h:mm aa\"\n                      // dateFormat=\"'YYYY-MM-dd', h:mm\"\n                      selected={endDate}\n                      selectsStart\n                      startDate={endDate}\n                      onChange={(date) => setEndDate(date)}\n                      strictParsing\n                      value={endDate}\n                      required\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label className=\"form-control-label\">Description</label>\n                    <Input\n                      className=\"form-control-alternative edit-event--description textarea-autosize\"\n                      placeholder=\"Event Desctiption\"\n                      type=\"textarea\"\n                      defaultValue={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                      required\n                    />\n                    <i className=\"form-group--bar\" />\n                  </FormGroup>\n                  <input className=\"edit-event--id\" type=\"hidden\" />\n                  <FormGroup>\n                    <label className=\"form-control-label d-block mb-3\">\n                      Status color\n                    </label>\n                    <ButtonGroup\n                      className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        className={classnames(\"bg-info\", {\n                          active: radios === \"bg-info\",\n                        })}\n                        color=\"\"\n                        id=\"bg-info\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-info\")}\n                        value=\"bg-info\"\n                      />\n                      <Button\n                        className={classnames(\"bg-warning\", {\n                          active: radios === \"bg-warning\",\n                        })}\n                        color=\"\"\n                        id=\"bg-warning\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-warning\")}\n                        value=\"bg-warning\"\n                      />\n                      <Button\n                        className={classnames(\"bg-danger\", {\n                          active: radios === \"bg-danger\",\n                        })}\n                        color=\"\"\n                        id=\"bg-danger\"\n                        type=\"button\"\n                        onClick={() => setRadios(\"bg-danger\")}\n                        value=\"vaccation\"\n                      />\n                    </ButtonGroup>\n                  </FormGroup>\n                </Form>\n              </div>\n              <div className=\"modal-footer\">\n                <Button color=\"primary\" onClick={changeEvent}>\n                  Update\n                </Button>\n                <Button\n                  color=\"danger\"\n                  onClick={() => {\n                    setModalChange(false);\n                    deleteEventSweetAlert();\n                  }}\n                >\n                  Delete\n                </Button>\n                <Button\n                  className=\"ml-auto\"\n                  color=\"link\"\n                  onClick={() => setModalChange(false)}\n                >\n                  Close\n                </Button>\n              </div>\n            </Modal>\n            {/* )} */}\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default CalendarView;\n"]},"metadata":{},"sourceType":"module"}