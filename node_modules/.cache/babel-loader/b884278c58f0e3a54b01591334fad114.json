{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\userDataTable\\\\UserData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Table, Popconfirm } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport Dashboard from \"../dashboards/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserData(props) {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modal = _React$useState2[0],\n      setModal = _React$useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  }; // const [userData, setUserData] = React.useState([\n  //   {\n  //     key: \"1\",\n  //     name: props.data.firstName,\n  //     age: props.data.age,\n  //     address: props.data.address,\n  //     phone: props.data.phone,\n  //     city: props.data.city,\n  //     country: props.data.country,\n  //     alternateAddress: props.data.alternateAddress,\n  //   },\n  //   {\n  //     key: \"2\",\n  //     name: \"Jim Green\",\n  //     age: 42,\n  //     address: \"London No. 1 Lake Park\",\n  //   },\n  //   {\n  //     key: \"3\",\n  //     name: \"Joe Black\",\n  //     age: 32,\n  //     address: \"Sidney No. 1 Lake Park\",\n  //   },\n  //   {\n  //     key: \"4\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"5\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"6\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"7\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"8\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"9\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"10\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  //   {\n  //     key: \"11\",\n  //     name: \"Jim Red\",\n  //     age: 32,\n  //     address: \"London No. 2 Lake Park\",\n  //   },\n  // ]);\n  // const columns = [\n  //   {\n  //     title: \"Name\",\n  //     dataIndex: \"name\",\n  //     width: 50,\n  //     fixed: \"left\",\n  //     filters: [\n  //       {\n  //         text: props.data.firstName,\n  //         value: props.data.firstName,\n  //       },\n  //       {\n  //         text: \"Joe\",\n  //         value: \"Joe\",\n  //       },\n  //       {\n  //         text: \"Category 1\",\n  //         value: \"Category 1\",\n  //         children: [\n  //           {\n  //             text: \"Yellow\",\n  //             value: \"Yellow\",\n  //           },\n  //           {\n  //             text: \"Pink\",\n  //             value: \"Pink\",\n  //           },\n  //         ],\n  //       },\n  //       {\n  //         text: \"Category 2\",\n  //         value: \"Category 2\",\n  //         children: [\n  //           {\n  //             text: \"Green\",\n  //             value: \"Green\",\n  //           },\n  //           {\n  //             text: \"Black\",\n  //             value: \"Black\",\n  //           },\n  //         ],\n  //       },\n  //     ],\n  //     filterMode: \"tree\",\n  //     filterSearch: true,\n  //     onFilter: (value, record) => record.name.includes(value),\n  //     width: \"30%\",\n  //   },\n  //   {\n  //     title: \"Age\",\n  //     dataIndex: \"age\",\n  //     width: 50,\n  //     fixed: \"left\",\n  //     sorter: (a, b) => a.age - b.age,\n  //   },\n  //   {\n  //     title: \"Address\",\n  //     dataIndex: \"address\",\n  //     filters: [\n  //       {\n  //         text: props.data.address,\n  //         value: props.data.address,\n  //       },\n  //       {\n  //         text: \"London\",\n  //         value: \"London\",\n  //       },\n  //       {\n  //         text: \"New York\",\n  //         value: \"New York\",\n  //       },\n  //     ],\n  //     onFilter: (value, record) => record.address.startsWith(value),\n  //     filterSearch: true,\n  //     width: \"40%\",\n  //   },\n  //   {\n  //     title: \"Phone\",\n  //     dataIndex: \"phone\",\n  //     filters: [\n  //       {\n  //         text: props.data.phone,\n  //         value: props.data.phone,\n  //       },\n  //       {\n  //         text: \"London\",\n  //         value: \"London\",\n  //       },\n  //       {\n  //         text: \"New York\",\n  //         value: \"New York\",\n  //       },\n  //     ],\n  //     onFilter: (value, record) => record.phone.startsWith(value),\n  //     filterSearch: true,\n  //     width: \"40%\",\n  //   },\n  //   {\n  //     title: \"City\",\n  //     dataIndex: \"city\",\n  //     filters: [\n  //       {\n  //         text: props.data.city,\n  //         value: props.data.city,\n  //       },\n  //       {\n  //         text: \"London\",\n  //         value: \"London\",\n  //       },\n  //       {\n  //         text: \"New York\",\n  //         value: \"New York\",\n  //       },\n  //     ],\n  //     onFilter: (value, record) => record.city.startsWith(value),\n  //     filterSearch: true,\n  //     width: \"40%\",\n  //   },\n  //   {\n  //     title: \"Country\",\n  //     dataIndex: \"country\",\n  //     filters: [\n  //       {\n  //         text: props.data.country,\n  //         value: props.data.country,\n  //       },\n  //       {\n  //         text: \"London\",\n  //         value: \"London\",\n  //       },\n  //       {\n  //         text: \"New York\",\n  //         value: \"New York\",\n  //       },\n  //     ],\n  //     onFilter: (value, record) => record.country.startsWith(value),\n  //     filterSearch: true,\n  //     width: \"40%\",\n  //   },\n  //   {\n  //     title: \"alternateAddress\",\n  //     dataIndex: \"alternateAddress\",\n  //     filters: [\n  //       {\n  //         text: props.data.alternateAddress,\n  //         value: props.data.alternateAddress,\n  //       },\n  //       {\n  //         text: \"London\",\n  //         value: \"London\",\n  //       },\n  //       {\n  //         text: \"New York\",\n  //         value: \"New York\",\n  //       },\n  //     ],\n  //     onFilter: (value, record) => record.alternateAddress.startsWith(value),\n  //     filterSearch: true,\n  //     width: \"40%\",\n  //   },\n  //   {\n  //     key: \"5\",\n  //     title: \"Action\",\n  //     dataIndex: \"\",\n  //     fixed: \"right\",\n  //     width: 100,\n  //     render: (record) => (\n  //       <>\n  //         <a onClick={toggle}>Edit</a>\n  //         <br />\n  //         <a>\n  //           <Popconfirm onClick={handleDelete(record)}>delete</Popconfirm>\n  //         </a>\n  //       </>\n  //     ),\n  //   },\n  // ];\n  // const handleDelete = (record) => {\n  //   // console.log(\"record\", record);\n  //   // const dataSource = [...userData];\n  //   // const updatedTask = dataSource.filter((items) => {\n  //   //   return items.key !== record.key;\n  //   // });\n  //   // setUserData([updatedTask]);\n  // };\n  // function onChange(pagination, filters, sorter, extra) {\n  //   console.log(\"params\", pagination, filters, sorter, extra);\n  // }\n\n\n  var columns = [{\n    title: \"Full Name\",\n    width: 100,\n    dataIndex: \"name\",\n    key: \"name\",\n    fixed: \"left\"\n  }, {\n    title: \"Age\",\n    width: 100,\n    dataIndex: \"age\",\n    key: \"age\",\n    fixed: \"left\"\n  }, {\n    title: \"Column 1\",\n    dataIndex: \"address\",\n    key: \"1\",\n    width: 150\n  }, {\n    title: \"Column 2\",\n    dataIndex: \"address\",\n    key: \"2\",\n    width: 150\n  }, {\n    title: \"Column 3\",\n    dataIndex: \"address\",\n    key: \"3\",\n    width: 150\n  }, {\n    title: \"Column 4\",\n    dataIndex: \"address\",\n    key: \"4\",\n    width: 150\n  }, {\n    title: \"Column 5\",\n    dataIndex: \"address\",\n    key: \"5\",\n    width: 150\n  }, {\n    title: \"Column 6\",\n    dataIndex: \"address\",\n    key: \"6\",\n    width: 150\n  }, {\n    title: \"Column 7\",\n    dataIndex: \"address\",\n    key: \"7\",\n    width: 150\n  }, {\n    title: \"Column 8\",\n    dataIndex: \"address\",\n    key: \"8\"\n  }, {\n    title: \"Action\",\n    key: \"operation\",\n    fixed: \"right\",\n    width: 100,\n    render: function render() {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }, _this);\n    }\n  }];\n  var data = [];\n\n  for (var i = 0; i < 100; i++) {\n    data.push({\n      key: i,\n      name: \"Edrward \".concat(i),\n      age: 32,\n      address: \"London Park no. \".concat(i)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data,\n        scroll: {\n          x: 1500,\n          y: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modal,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          isClose: modal,\n          toggle: toggle,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserData, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = UserData;\nexport default UserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/userDataTable/UserData.js"],"names":["React","useEffect","Table","Popconfirm","Modal","ModalBody","ModalHeader","Dashboard","UserData","props","useState","modal","setModal","toggle","columns","title","width","dataIndex","key","fixed","render","data","i","push","name","age","address","x","y"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,MAAlC;AACA,OAAO,oBAAP;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,YAA9C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA;;AACvB,wBAA0BT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,GAAf,CAHuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMG,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEC,IAAAA,SAAS,EAAE,MAHb;AAIEC,IAAAA,GAAG,EAAE,MAJP;AAKEC,IAAAA,KAAK,EAAE;AALT,GADc,EAQd;AACEJ,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEC,IAAAA,SAAS,EAAE,KAHb;AAIEC,IAAAA,GAAG,EAAE,KAJP;AAKEC,IAAAA,KAAK,EAAE;AALT,GARc,EAed;AACEJ,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GAfc,EAqBd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GArBc,EA2Bd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GA3Bc,EAiCd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GAjCc,EAuCd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GAvCc,EA6Cd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GA7Cc,EAmDd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEF,IAAAA,KAAK,EAAE;AAJT,GAnDc,EAyDd;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBE,IAAAA,SAAS,EAAE,SAAhC;AAA2CC,IAAAA,GAAG,EAAE;AAAhD,GAzDc,EA0Dd;AACEH,IAAAA,KAAK,EAAE,QADT;AAEEG,IAAAA,GAAG,EAAE,WAFP;AAGEC,IAAAA,KAAK,EAAE,OAHT;AAIEH,IAAAA,KAAK,EAAE,GAJT;AAKEI,IAAAA,MAAM,EAAE;AAAA,0BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAN;AAAA;AALV,GA1Dc,CAAhB;AAmEA,MAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACRL,MAAAA,GAAG,EAAEI,CADG;AAERE,MAAAA,IAAI,oBAAaF,CAAb,CAFI;AAGRG,MAAAA,GAAG,EAAE,EAHG;AAIRC,MAAAA,OAAO,4BAAqBJ,CAArB;AAJC,KAAV;AAMD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAER,OADX;AAEE,QAAA,UAAU,EAAEO,IAFd;AAGE,QAAA,MAAM,EAAE;AAAEM,UAAAA,CAAC,EAAE,IAAL;AAAWC,UAAAA,CAAC,EAAE;AAAd;AAHV;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEjB,KAAf;AAAsB,QAAA,MAAM,EAAEE,MAA9B;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEF,KAAtB;AAA6B,UAAA,MAAM,EAAEE,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,SAAD;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA3XQL,Q;;KAAAA,Q;AA6XT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Table, Popconfirm } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport Dashboard from \"../dashboards/Dashboard\";\r\n\r\nfunction UserData(props) {\r\n  const [modal, setModal] = React.useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  // const [userData, setUserData] = React.useState([\r\n  //   {\r\n  //     key: \"1\",\r\n  //     name: props.data.firstName,\r\n  //     age: props.data.age,\r\n  //     address: props.data.address,\r\n  //     phone: props.data.phone,\r\n  //     city: props.data.city,\r\n  //     country: props.data.country,\r\n  //     alternateAddress: props.data.alternateAddress,\r\n  //   },\r\n  //   {\r\n  //     key: \"2\",\r\n  //     name: \"Jim Green\",\r\n  //     age: 42,\r\n  //     address: \"London No. 1 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"3\",\r\n  //     name: \"Joe Black\",\r\n  //     age: 32,\r\n  //     address: \"Sidney No. 1 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"4\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"5\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"6\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"7\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"8\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"9\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"10\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  //   {\r\n  //     key: \"11\",\r\n  //     name: \"Jim Red\",\r\n  //     age: 32,\r\n  //     address: \"London No. 2 Lake Park\",\r\n  //   },\r\n  // ]);\r\n\r\n  // const columns = [\r\n  //   {\r\n  //     title: \"Name\",\r\n  //     dataIndex: \"name\",\r\n  //     width: 50,\r\n  //     fixed: \"left\",\r\n  //     filters: [\r\n  //       {\r\n  //         text: props.data.firstName,\r\n  //         value: props.data.firstName,\r\n  //       },\r\n  //       {\r\n  //         text: \"Joe\",\r\n  //         value: \"Joe\",\r\n  //       },\r\n  //       {\r\n  //         text: \"Category 1\",\r\n  //         value: \"Category 1\",\r\n  //         children: [\r\n  //           {\r\n  //             text: \"Yellow\",\r\n  //             value: \"Yellow\",\r\n  //           },\r\n  //           {\r\n  //             text: \"Pink\",\r\n  //             value: \"Pink\",\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         text: \"Category 2\",\r\n  //         value: \"Category 2\",\r\n  //         children: [\r\n  //           {\r\n  //             text: \"Green\",\r\n  //             value: \"Green\",\r\n  //           },\r\n  //           {\r\n  //             text: \"Black\",\r\n  //             value: \"Black\",\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //     ],\r\n  //     filterMode: \"tree\",\r\n  //     filterSearch: true,\r\n  //     onFilter: (value, record) => record.name.includes(value),\r\n  //     width: \"30%\",\r\n  //   },\r\n  //   {\r\n  //     title: \"Age\",\r\n  //     dataIndex: \"age\",\r\n  //     width: 50,\r\n  //     fixed: \"left\",\r\n  //     sorter: (a, b) => a.age - b.age,\r\n  //   },\r\n  //   {\r\n  //     title: \"Address\",\r\n  //     dataIndex: \"address\",\r\n  //     filters: [\r\n  //       {\r\n  //         text: props.data.address,\r\n  //         value: props.data.address,\r\n  //       },\r\n  //       {\r\n  //         text: \"London\",\r\n  //         value: \"London\",\r\n  //       },\r\n  //       {\r\n  //         text: \"New York\",\r\n  //         value: \"New York\",\r\n  //       },\r\n  //     ],\r\n  //     onFilter: (value, record) => record.address.startsWith(value),\r\n  //     filterSearch: true,\r\n  //     width: \"40%\",\r\n  //   },\r\n\r\n  //   {\r\n  //     title: \"Phone\",\r\n  //     dataIndex: \"phone\",\r\n  //     filters: [\r\n  //       {\r\n  //         text: props.data.phone,\r\n  //         value: props.data.phone,\r\n  //       },\r\n  //       {\r\n  //         text: \"London\",\r\n  //         value: \"London\",\r\n  //       },\r\n  //       {\r\n  //         text: \"New York\",\r\n  //         value: \"New York\",\r\n  //       },\r\n  //     ],\r\n  //     onFilter: (value, record) => record.phone.startsWith(value),\r\n  //     filterSearch: true,\r\n  //     width: \"40%\",\r\n  //   },\r\n  //   {\r\n  //     title: \"City\",\r\n  //     dataIndex: \"city\",\r\n  //     filters: [\r\n  //       {\r\n  //         text: props.data.city,\r\n  //         value: props.data.city,\r\n  //       },\r\n  //       {\r\n  //         text: \"London\",\r\n  //         value: \"London\",\r\n  //       },\r\n  //       {\r\n  //         text: \"New York\",\r\n  //         value: \"New York\",\r\n  //       },\r\n  //     ],\r\n  //     onFilter: (value, record) => record.city.startsWith(value),\r\n  //     filterSearch: true,\r\n  //     width: \"40%\",\r\n  //   },\r\n  //   {\r\n  //     title: \"Country\",\r\n  //     dataIndex: \"country\",\r\n  //     filters: [\r\n  //       {\r\n  //         text: props.data.country,\r\n  //         value: props.data.country,\r\n  //       },\r\n  //       {\r\n  //         text: \"London\",\r\n  //         value: \"London\",\r\n  //       },\r\n  //       {\r\n  //         text: \"New York\",\r\n  //         value: \"New York\",\r\n  //       },\r\n  //     ],\r\n  //     onFilter: (value, record) => record.country.startsWith(value),\r\n  //     filterSearch: true,\r\n  //     width: \"40%\",\r\n  //   },\r\n  //   {\r\n  //     title: \"alternateAddress\",\r\n  //     dataIndex: \"alternateAddress\",\r\n  //     filters: [\r\n  //       {\r\n  //         text: props.data.alternateAddress,\r\n  //         value: props.data.alternateAddress,\r\n  //       },\r\n  //       {\r\n  //         text: \"London\",\r\n  //         value: \"London\",\r\n  //       },\r\n  //       {\r\n  //         text: \"New York\",\r\n  //         value: \"New York\",\r\n  //       },\r\n  //     ],\r\n  //     onFilter: (value, record) => record.alternateAddress.startsWith(value),\r\n  //     filterSearch: true,\r\n  //     width: \"40%\",\r\n  //   },\r\n\r\n  //   {\r\n  //     key: \"5\",\r\n  //     title: \"Action\",\r\n  //     dataIndex: \"\",\r\n  //     fixed: \"right\",\r\n  //     width: 100,\r\n  //     render: (record) => (\r\n  //       <>\r\n  //         <a onClick={toggle}>Edit</a>\r\n  //         <br />\r\n  //         <a>\r\n  //           <Popconfirm onClick={handleDelete(record)}>delete</Popconfirm>\r\n  //         </a>\r\n  //       </>\r\n  //     ),\r\n  //   },\r\n  // ];\r\n\r\n  // const handleDelete = (record) => {\r\n  //   // console.log(\"record\", record);\r\n  //   // const dataSource = [...userData];\r\n  //   // const updatedTask = dataSource.filter((items) => {\r\n  //   //   return items.key !== record.key;\r\n  //   // });\r\n  //   // setUserData([updatedTask]);\r\n  // };\r\n\r\n  // function onChange(pagination, filters, sorter, extra) {\r\n  //   console.log(\"params\", pagination, filters, sorter, extra);\r\n  // }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Full Name\",\r\n      width: 100,\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      fixed: \"left\",\r\n    },\r\n    {\r\n      title: \"Age\",\r\n      width: 100,\r\n      dataIndex: \"age\",\r\n      key: \"age\",\r\n      fixed: \"left\",\r\n    },\r\n    {\r\n      title: \"Column 1\",\r\n      dataIndex: \"address\",\r\n      key: \"1\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Column 2\",\r\n      dataIndex: \"address\",\r\n      key: \"2\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Column 3\",\r\n      dataIndex: \"address\",\r\n      key: \"3\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Column 4\",\r\n      dataIndex: \"address\",\r\n      key: \"4\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Column 5\",\r\n      dataIndex: \"address\",\r\n      key: \"5\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Column 6\",\r\n      dataIndex: \"address\",\r\n      key: \"6\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Column 7\",\r\n      dataIndex: \"address\",\r\n      key: \"7\",\r\n      width: 150,\r\n    },\r\n    { title: \"Column 8\", dataIndex: \"address\", key: \"8\" },\r\n    {\r\n      title: \"Action\",\r\n      key: \"operation\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      render: () => <a>action</a>,\r\n    },\r\n  ];\r\n\r\n  const data = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    data.push({\r\n      key: i,\r\n      name: `Edrward ${i}`,\r\n      age: 32,\r\n      address: `London Park no. ${i}`,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          scroll={{ x: 1500, y: 300 }}\r\n        />\r\n        ,\r\n        {/* <Table\r\n          columns={columns}\r\n          pagination={{ pageSize: 50 }}\r\n          scroll={{ x: 1300 }}\r\n          dataSource={userData}\r\n          onChange={onChange}\r\n        /> */}\r\n      </header>\r\n\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader isClose={modal} toggle={toggle}>\r\n            Update\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Dashboard />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserData;\r\n"]},"metadata":{},"sourceType":"module"}