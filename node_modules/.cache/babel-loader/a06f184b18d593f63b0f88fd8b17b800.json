{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kulde\\\\Downloads\\\\New folder\\\\argon-dashboard-pro-react-v1.2.1\\\\src\\\\views\\\\pages\\\\dashboards\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // javascipt plugin for creating charts\n\nimport { Chart } from \"chart.js\";\nimport \"./Dashboard.css\"; // import \"../staffMemeber/StaffMember\";\n\nimport { chartOptions, parseOptions } from \"variables/charts.js\";\nimport StaffMember from \"../staffMemeber/StaffMember\"; // import ResidentialDetail from \"../ResidentialDetail/ResidentialDetail\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      step = _React$useState2[0],\n      setStep = _React$useState2[1]; // function for going to next step by increasing step state by 1\n\n\n  var nextStep = function nextStep() {\n    setStep(step + 1);\n  };\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(StaffMember, {\n        nextStep: nextStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(ResidentialDetailr, {\n        nextStep: nextStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Dashboard, \"M88kfgrd7Unvr/hfMAIVxST1ckg=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/kulde/Downloads/New folder/argon-dashboard-pro-react-v1.2.1/src/views/pages/dashboards/Dashboard.js"],"names":["React","Chart","chartOptions","parseOptions","StaffMember","Dashboard","useState","step","setStep","nextStep","window"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,OAAO,iBAAP,C,CACA;;AAEA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,qBAA3C;AACA,OAAOC,WAAP,MAAwB,6BAAxB,C,CACA;;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,wBAAwBL,KAAK,CAACM,QAAN,CAAe,CAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb,uBADmB,CAGnB;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBD,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,MAAIG,MAAM,CAACT,KAAX,EAAkB;AAChBE,IAAAA,YAAY,CAACF,KAAD,EAAQC,YAAY,EAApB,CAAZ;AACD;;AAED,UAAQK,IAAR;AACE,SAAK,CAAL;AACE,0BAAO,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,CAAL;AACE,0BAAO,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;;AAEF;AACE;AAPJ;;AAUA,sBACE,qCADF;AAMD;;GA5BQJ,S;;KAAAA,S;AA8BT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\n\n// javascipt plugin for creating charts\nimport { Chart } from \"chart.js\";\n\nimport \"./Dashboard.css\";\n// import \"../staffMemeber/StaffMember\";\n\nimport { chartOptions, parseOptions } from \"variables/charts.js\";\nimport StaffMember from \"../staffMemeber/StaffMember\";\n// import ResidentialDetail from \"../ResidentialDetail/ResidentialDetail\";\n\nfunction Dashboard() {\n  const [step, setStep] = React.useState(1);\n\n  // function for going to next step by increasing step state by 1\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  switch (step) {\n    case 1:\n      return <StaffMember nextStep={nextStep} />;\n    case 2:\n      return <ResidentialDetailr nextStep={nextStep} />;\n\n    default:\n      break;\n  }\n\n  return (\n    <>\n      {/* <StaffMember /> */}\n      {/* <ResidentialDetail /> */}\n    </>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}